{
  "openapi": "3.0.2",
  "info": {
    "title": "Profit.com Data API",
    "description": "\n# Introduction\nProfit.com Data API makes financial data accessible to everyone.\nThe API is based on REST, has resource-oriented URLs, returns JSON-encoded responses,\nand returns standard HTTP response codes.\nThis is one of the most comprehensive financial data API available on the market.\n\n\n## Authentification\n\nAccess to this API is available with your personal API key, which can be obtained by signing up for the **Free** plan.\nIf you do not include your API token when making an API request, or use one that is incorrect or disabled,\nProfit.com API returns an error. You can find your API Key in your [Console](https://profit.com/console/data-api).\n\n## Endpoints\n\nAPI endpoints are prefixed with [https://api.profit.com/](https://api.profit.com/).\n\nWebSocket endpoints are prefixed with [wss://api.profit.com/real-time](https://api.profit.com/#tag/Websockets).\n\n## Rate Limits\n\nIf your rate limit is exceeded, you will receive a response with status code 429.\nLimits for different plans can be viewed in the plans pricing section.\nOn top of all limits, there is a 30 API calls/ second limit.\n\n## Error Codes\nProfit.com Data API uses a unified error response scheme.\nConsisting of a JSON object with code, message and status keys.\nBelow are possible output error codes:\n\n| Error | Status | Meaning|\n| ----------- | ----------- | ----------- |\n| 400 | Bad Request | There is an error with one or multiple parameters. |\n| 401 | Unauthorized | Your API key is wrong or not valid. |\n| 403 | Forbidden | Your API key is valid but has no permissions to make requests available on the upper plans. |\n| 404 | Not Found | The specified data can not be found. |\n| 414 | Parameter Too Long | The parameter which accepts multiple values is out of range. |\n| 429 | Too Many Requests | You've reached your API request limits. |\n| 500 | Internal Server Error | There is an error on the server-side. Try again later. |\n\n## Parameters\nWhen sending a request, please consult the below information regarding parameters setup.\n\n- Parameters are ampersand(&) separated.\n        (i.e. **eod?ticker=AAPL.US&from=20110215&to=20210215** is correct.)\n- Case does not matter when passing values to a parameter unless specified in the docs.\n        (i.e. Both **?symbols=fb** and **?symbols=FB** will work.)\n- Symbol might be also passed in the form **symbol.exchange_name**.\n        (i.e. Both **?symbols=fb** and **?symbols=FB** will work.)\n- When passing **start_date** and **end_date** , the date format is timestamp.\n        (i.e. eod?ticker=AAPL.US&start_date=1612745183&end_date=1634745183)\n- Most endpoints support a format parameter to return data  in a format other than the default JSON.\n        (i.e. ?format=json and ?format=csv)\n\n## Support\nWe are looking to provide more scalable community support in future.\nIn the meantime, please consult the following links for information and support.\n\n- [Help Center](https://profit.com/resources/help-center)\n- [Contact Us](https://profit.com/about/contact-us)\n\nHave a question or want to report a problem regarding the Profit.com API?\nPlease email us at [support@profit.com](support@profit.com) the below information:\n\n- Email account associated with your Profit.com Account\n- Description of your encountered problem\n- Additional relevant information (screenshots etc)\n\n",
    "version": "5.50.4"
  },
  "paths": {
    "/data-api/reference/exchanges": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Exchanges",
        "description": "This API call returns the list of supported exchange codes. This list is updated daily.",
        "operationId": "exchanges_data_api_reference_exchanges_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ExchangeTypes"
                }
              ],
              "default": "stocks"
            },
            "name": "type",
            "in": "query"
          },
          {
            "description": "Filter by exchange mic code",
            "required": false,
            "schema": {
              "title": "Code",
              "type": "string",
              "description": "Filter by exchange mic code"
            },
            "example": "US",
            "name": "code",
            "in": "query"
          },
          {
            "description": "Filter by exchange name",
            "required": false,
            "schema": {
              "title": "Name",
              "type": "string",
              "description": "Filter by exchange name"
            },
            "example": "USA Stocks",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Exchanges Data Api Reference Exchanges Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExchangeReferenceData"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/stocks": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Stocks Symbols",
        "description": "This API call returns the list of supported stocks. This list is updated daily.\nThe list of supported exchange codes can be found in\n[Exchanges](https://api.profit.com/#operation/exchanges_data_api_reference_exchanges_get).",
        "operationId": "stocks_symbols_data_api_reference_stocks_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "TSLA",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by exchange name",
            "required": false,
            "schema": {
              "title": "Exchange",
              "type": "string",
              "description": "Filter by exchange name"
            },
            "example": "NASDAQ",
            "name": "exchange",
            "in": "query"
          },
          {
            "description": "Filter by country or alpha code",
            "required": false,
            "schema": {
              "title": "Country",
              "type": "string",
              "description": "Filter by country or alpha code"
            },
            "example": "United States",
            "name": "country",
            "in": "query"
          },
          {
            "description": "Filter by currency code or alpha code",
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "string",
              "description": "Filter by currency code or alpha code"
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          },
          {
            "description": "Filter by type",
            "required": false,
            "schema": {
              "title": "Type",
              "type": "string",
              "description": "Filter by type"
            },
            "example": "Common Stock",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_StocksReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/indices": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Indices Symbols",
        "description": "This API call returns the list of supported Indices. This list is updated daily.",
        "operationId": "indices_symbols_data_api_reference_indices_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "DJI",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by exchange name",
            "required": false,
            "schema": {
              "title": "Exchange",
              "type": "string",
              "description": "Filter by exchange name"
            },
            "example": "INDX",
            "name": "exchange",
            "in": "query"
          },
          {
            "description": "Filter by country or alpha code",
            "required": false,
            "schema": {
              "title": "Country",
              "type": "string",
              "description": "Filter by country or alpha code"
            },
            "example": "United States",
            "name": "country",
            "in": "query"
          },
          {
            "description": "Filter by currency code or alpha code",
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "string",
              "description": "Filter by currency code or alpha code"
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          },
          {
            "description": "Filter by type",
            "required": false,
            "schema": {
              "title": "Type",
              "type": "string",
              "description": "Filter by type"
            },
            "example": "INDEX",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_IndexReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/etfs": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "ETFs Symbols",
        "description": "This API call returns the list of supported ETFs. This list is updated daily.",
        "operationId": "etfs_symbols_data_api_reference_etfs_get",
        "parameters": [
          {
            "description": "Filter by issuer company name",
            "required": false,
            "schema": {
              "title": "Issuer",
              "type": "string",
              "description": "Filter by issuer company name"
            },
            "example": "Vanguard",
            "name": "issuer",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "VTI",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by exchange name",
            "required": false,
            "schema": {
              "title": "Exchange",
              "type": "string",
              "description": "Filter by exchange name"
            },
            "example": "NYSE ARCA",
            "name": "exchange",
            "in": "query"
          },
          {
            "description": "Filter by country or alpha code",
            "required": false,
            "schema": {
              "title": "Country",
              "type": "string",
              "description": "Filter by country or alpha code"
            },
            "example": "United States",
            "name": "country",
            "in": "query"
          },
          {
            "description": "Filter by currency code or alpha code",
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "string",
              "description": "Filter by currency code or alpha code"
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          },
          {
            "description": "Filter by type",
            "required": false,
            "schema": {
              "title": "Type",
              "type": "string",
              "description": "Filter by type"
            },
            "example": "ETF",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_ETFReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/funds": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Mutual Funds Symbols",
        "description": "This API call returns the list of supported Mutual Funds. This list is updated daily.",
        "operationId": "mutual_funds_symbols_data_api_reference_funds_get",
        "parameters": [
          {
            "description": "Filter by issuer company name",
            "required": false,
            "schema": {
              "title": "Issuer",
              "type": "string",
              "description": "Filter by issuer company name"
            },
            "example": "Vanguard",
            "name": "issuer",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "VTSAX",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by exchange name",
            "required": false,
            "schema": {
              "title": "Exchange",
              "type": "string",
              "description": "Filter by exchange name"
            },
            "example": "NMFQS",
            "name": "exchange",
            "in": "query"
          },
          {
            "description": "Filter by country or alpha code",
            "required": false,
            "schema": {
              "title": "Country",
              "type": "string",
              "description": "Filter by country or alpha code"
            },
            "example": "United States",
            "name": "country",
            "in": "query"
          },
          {
            "description": "Filter by currency code or alpha code",
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "string",
              "description": "Filter by currency code or alpha code"
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          },
          {
            "description": "Filter by type",
            "required": false,
            "schema": {
              "title": "Type",
              "type": "string",
              "description": "Filter by type"
            },
            "example": "FUND",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_FundsReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/forex": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Forex Symbols",
        "description": "This API call returns the list of supported Forex pairs. This list is updated daily.",
        "operationId": "forex_symbols_data_api_reference_forex_get",
        "parameters": [
          {
            "description": "Filter by group name",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ForexCategory"
                }
              ],
              "description": "Filter by group name"
            },
            "example": "MAJOR",
            "name": "group",
            "in": "query"
          },
          {
            "description": "Filter by currency code name or alpha code",
            "required": false,
            "schema": {
              "title": "Currency Base",
              "type": "string",
              "description": "Filter by currency code name or alpha code"
            },
            "example": "EUR",
            "name": "currency_base",
            "in": "query"
          },
          {
            "description": "Filter by currency code name or alpha code",
            "required": false,
            "schema": {
              "title": "Currency Quote",
              "type": "string",
              "description": "Filter by currency code name or alpha code"
            },
            "example": "USD",
            "name": "currency_quote",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "EURUSD",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_ForexReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/crypto": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Crypto Symbols",
        "description": "This API call returns the list of supported cryptocurrency pairs. This list is updated daily.",
        "operationId": "crypto_symbols_data_api_reference_crypto_get",
        "parameters": [
          {
            "description": "Filter by algorithm name",
            "required": false,
            "schema": {
              "title": "Algorithm",
              "type": "string",
              "description": "Filter by algorithm name"
            },
            "example": "SHA-256",
            "name": "algorithm",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "BTC",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          },
          {
            "description": "Filter by exchange name",
            "required": false,
            "schema": {
              "title": "Exchange",
              "type": "string",
              "description": "Filter by exchange name"
            },
            "example": "CC",
            "name": "exchange",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_CryptoReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/commodity": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Commodity Symbols",
        "description": "This API call returns the list of supported commodity symbols.  This list is updated daily.",
        "operationId": "commodity_symbols_data_api_reference_commodity_get",
        "parameters": [
          {
            "description": "Filter by group of instruments",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CommoditiesCategory"
                }
              ],
              "description": "Filter by group of instruments"
            },
            "example": "ENERGY",
            "name": "group",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "LCO",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_CommodityReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/reference/bonds": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Bonds Symbols",
        "description": "This API call returns the list of supported bonds symbols. This list is updated daily.",
        "operationId": "bonds_symbols_data_api_reference_bonds_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 1000.0,
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Filter by symbol",
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "Filter by symbol"
            },
            "example": "US10Y",
            "name": "symbol",
            "in": "query"
          },
          {
            "description": "Filter by available data",
            "required": false,
            "schema": {
              "title": "Available Data",
              "type": "array",
              "items": {
                "enum": [
                  "live",
                  "historical",
                  "fundamental"
                ],
                "type": "string"
              },
              "description": "Filter by available data",
              "default": [
                "historical",
                "fundamental"
              ]
            },
            "name": "available_data",
            "in": "query"
          },
          {
            "description": "Filter by country or alpha code",
            "required": false,
            "schema": {
              "title": "Country",
              "type": "string",
              "description": "Filter by country or alpha code"
            },
            "example": "United States",
            "name": "country",
            "in": "query"
          },
          {
            "description": "Filter by currency code or alpha code",
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "string",
              "description": "Filter by currency code or alpha code"
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginator_BondsReferenceData_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/market-data/historical/daily/{ticker}": {
      "get": {
        "tags": [
          "Market Data"
        ],
        "summary": "Historical Daily (OHLCV)",
        "description": "This API call returns end of day historical candlestick price data for a requested instrument :\nOpen, High, Low and Close prices. Non-currency instruments also include Volume information.\nDaily data is adjusted for Splits.",
        "operationId": "historical_daily_data_api_market_data_historical_daily__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of start date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "example": "2025-08-10",
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of end date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "example": "2025-08-17",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Historical Daily Data Api Market Data Historical Daily  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OHLCVDaily"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/market-data/historical/intraday/{ticker}": {
      "get": {
        "tags": [
          "Market Data"
        ],
        "summary": "Historical Intraday (OHLCV)",
        "description": "This API call returns intraday historical candlestick price data for a requested instrument :\nOpen, High, Low and Close prices. Non-currency instruments also include Volume information.\nIntraday data contains market state information (Pre, Open and After market data).",
        "operationId": "historical_intraday_data_api_market_data_historical_intraday__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of start date",
              "type": "integer"
            },
            "example": 1754784000,
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of end date",
              "type": "integer"
            },
            "example": 1755388800,
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Supported intervals are (1m, 2m, 5m, 15m, 30m, 45m, 1h, 2h, 4h)",
              "allOf": [
                {
                  "$ref": "#/components/schemas/IntradayInterval"
                }
              ],
              "default": "1m"
            },
            "name": "interval",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Candles limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 500
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Historical Intraday Data Api Market Data Historical Intraday  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OHLCVIntraday"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/market-data/quote/{ticker}": {
      "get": {
        "tags": [
          "Market Data"
        ],
        "summary": "Quote",
        "description": "This API call returns the latest quote price for a requested instrument.\nFor real-time updates and constant polling, it is recommended to use\n[websockets](https://api.profit.com/#tag/Websockets).",
        "operationId": "quote_data_api_market_data_quote__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/general/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "General",
        "description": "This API call returns the general information of a company including\nDescription, Currency, Country, Exchange, Sector, Industry and other.",
        "operationId": "general_data_api_fundamentals_stocks_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StocksGeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/key_executives/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Key Executives",
        "description": "This API call returns the list of company's executives and members of the Board.",
        "operationId": "key_executives_data_api_fundamentals_stocks_key_executives__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Key Executives Data Api Fundamentals Stocks Key Executives  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Officers"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/analysts_recommendations/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Analysts Recommendations",
        "description": "This API call returns the latest analyst recommendation trends for a company.",
        "operationId": "analysts_recommendations_data_api_fundamentals_stocks_analysts_recommendations__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalystsRecommendationsFundamentals"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/price_target/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Price Target",
        "description": "This API call returns the latest price target consensus for a company.",
        "operationId": "price_target_data_api_fundamentals_stocks_price_target__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceTarget"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/upgrades_downgrades/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Upgrades Downgrades",
        "description": "This API call returns the latest analyst upgrades and downgrades for a company.",
        "operationId": "upgrades_downgrades_data_api_fundamentals_stocks_upgrades_downgrades__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Upgrades Downgrades Data Api Fundamentals Stocks Upgrades Downgrades  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpgradeDowngradeRecord"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/peers/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Peers",
        "description": "This API call returns the list of top moving peers for a company.\nPeers are taken from the same country, sector and industry. This list is updated daily.",
        "operationId": "peers_data_api_fundamentals_stocks_peers__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Peers Data Api Fundamentals Stocks Peers  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockFundamentalsPeerAnalysis"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/outstanding_shares/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Outstanding Shares",
        "description": "This API call returns the list of historical outstanding shares for a company.\nThe amount of outstanding shares on the date is quoted  in Millions.",
        "operationId": "outstanding_shares_data_api_fundamentals_stocks_outstanding_shares__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Outstanding Shares Data Api Fundamentals Stocks Outstanding Shares  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IWOutstandingShare"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/insider_transactions/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Insider Transactions",
        "description": "This API call returns the list of historical insider transactions according to SEC filings for a company.",
        "operationId": "insider_transactions_data_api_fundamentals_stocks_insider_transactions__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Insider Transactions Data Api Fundamentals Stocks Insider Transactions  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InsiderTransaction"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/dividends/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Dividends",
        "description": "This API call returns the historical dividends paid out by a company.",
        "operationId": "dividends_data_api_fundamentals_stocks_dividends__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "example": [
                "AAPL",
                "AAPL.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Dividends Data Api Fundamentals Stocks Dividends  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IWDividend"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/splits/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Splits",
        "description": "This API call returns the historical share split factors of a company.",
        "operationId": "splits_data_api_fundamentals_stocks_splits__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StocksSplits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/eps_historical/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Eps Historical",
        "description": "This API call returns the historical estimated, actual and surprise EPS ( Earnings per Share) data.\nReported data is Quarterly and Annual.",
        "operationId": "eps_historical_data_api_fundamentals_stocks_eps_historical__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel_c9e773b2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/eps_trends/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Eps Trends",
        "description": "This API call returns the estimated EPS and Revenue data forecasted by analysts. Reported data is Quarterly.",
        "operationId": "eps_trends_data_api_fundamentals_stocks_eps_trends__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IWEarningsTrend"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/balance_sheet/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Balance Sheet",
        "description": "This API call returns the standardized balance sheet for global companies going back 30+ years.\nData is sourced from original filings most of which made available through SEC Filings and\nInternational Filings endpoints.",
        "operationId": "balance_sheet_data_api_fundamentals_stocks_balance_sheet__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockFinancialsHistory_BalanceSheetReport_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/income_statement/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Income Statement",
        "description": "This API call returns the standardized income statement for global companies going back 30+ years.\nData is sourced from original filings most of which made available through SEC Filings and\nInternational Filings endpoints.",
        "operationId": "income_statement_data_api_fundamentals_stocks_income_statement__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockFinancialsHistory_IncomeStatementReport_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/cash_flow/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Cash Flow",
        "description": "This API call returns the standardized cash flow statement for global companies going back 30+ years.\nData is sourced from original filings most of which made available through SEC Filings and\nInternational Filings endpoints.",
        "operationId": "cash_flow_data_api_fundamentals_stocks_cash_flow__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockFinancialsHistory_IWCashFlowReport_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/filings/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Filings",
        "description": "This API call returns the list of regulatory documents submitted by a company to the\nSecurities and Exchange Commission (SEC).\nThe list is updated daily.",
        "operationId": "filings_data_api_fundamentals_stocks_filings__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IWFilings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/institutional_holders/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Institutional Holders",
        "description": "This API call returns the amount of the company\u2019s available stock owned by institutional investors\n(investment firms, pension funds, insurance companies, etc).\nData is sourced from 13F form, Schedule 13D and 13G for US market, UK Share Register for UK market,\nSEDI for Canadian market and equivalent filings for other international markets.",
        "operationId": "institutional_holders_data_api_fundamentals_stocks_institutional_holders__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Institutional Holders Data Api Fundamentals Stocks Institutional Holders  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HolderPortfolio"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/stocks/fund_holders/{ticker}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Fund Holders",
        "description": "This API call returns the amount of the company\u2019s available stock owned by mutual fund holders.\nData is sourced from 13F form, Schedule 13D and 13G for US market, UK Share Register for UK market,\nSEDI for Canadian market and equivalent filings for other international markets.",
        "operationId": "fund_holders_data_api_fundamentals_stocks_fund_holders__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Fund Holders Data Api Fundamentals Stocks Fund Holders  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HolderPortfolio"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/indexes/general/{ticker}": {
      "get": {
        "tags": [
          "Indexes"
        ],
        "summary": "General",
        "description": "This API call returns the general information of an Index including\nDescription, Currency, Country and other.",
        "operationId": "general_data_api_fundamentals_indexes_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "DJI",
                "DJI.INDX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/indexes/top_movers/{ticker}": {
      "get": {
        "tags": [
          "Indexes"
        ],
        "summary": "Top Movers",
        "description": "This API call returns the list of top moving stocks contained in the Index.\nThis list is updated daily.",
        "operationId": "top_movers_data_api_fundamentals_indexes_top_movers__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "DJI",
                "DJI.INDX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Top Movers Data Api Fundamentals Indexes Top Movers  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TopMover"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/indexes/sector_allocation/{ticker}": {
      "get": {
        "tags": [
          "Indexes"
        ],
        "summary": "Sector Allocation",
        "description": "This API call returns the list of sectors across which the index is allocated.\nThis list is updated daily.",
        "operationId": "sector_allocation_data_api_fundamentals_indexes_sector_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "DJI",
                "DJI.INDX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexesSectorAllocation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/indexes/index_constituents/{ticker}": {
      "get": {
        "tags": [
          "Indexes"
        ],
        "summary": "Index Constituents",
        "description": "This API call returns the list of stocks composed in the index.\nThis list is updated daily.",
        "operationId": "index_constituents_data_api_fundamentals_indexes_index_constituents__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "DJI",
                "DJI.INDX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel_3606bfd5"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/general/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "General",
        "description": "This API call returns the general information about the fund including\nDescription, Currency, Country, Issuer and other.",
        "operationId": "general_data_api_fundamentals_etf_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtfGeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/key-stats/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Key Stats",
        "description": "This API call returns the key stats information about the etf.",
        "operationId": "key_stats_data_api_fundamentals_etf_key_stats__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtfIWKeyStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/asset_allocation/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Asset Allocation",
        "description": "This API call returns the percentage allocation of a fund across Cash, Stocks, Bonds and Other.\nThis data is updated daily.",
        "operationId": "asset_allocation_data_api_fundamentals_etf_asset_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel_9feaa797"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/sector_allocation/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Sector Allocation",
        "description": "This API call returns the list of sectors across which the fund is allocated.\nThis list is updated daily.",
        "operationId": "sector_allocation_data_api_fundamentals_etf_sector_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sector Allocation Data Api Fundamentals Etf Sector Allocation  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SectorIWEquityAndCategory"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/region_allocation/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Region Allocation",
        "description": "This API call returns the list of world geographic regions across which the fund is allocated.\nThis list is updated daily.",
        "operationId": "region_allocation_data_api_fundamentals_etf_region_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Region Allocation Data Api Fundamentals Etf Region Allocation  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IWEquityAndCategory"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/holdings/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Holdings",
        "description": "This API call returns the list of stocks held by the fund.\nThis list is updated daily.",
        "operationId": "holdings_data_api_fundamentals_etf_holdings__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Holdings Data Api Fundamentals Etf Holdings  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EtfFundamentalsHoldings"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/daily-returns/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Get Funds Daily Returns",
        "description": "This API call returns the historical daily returns of the fund.\nThis data is updated daily.",
        "operationId": "get_funds_daily_returns_data_api_fundamentals_etf_daily_returns__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of start date",
              "type": "integer"
            },
            "example": "1612745183",
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of start date",
              "type": "integer"
            },
            "example": "1712745183",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Get Funds Daily Returns Data Api Fundamentals Etf Daily Returns  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyReturn"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/etf/performance_statistics/{ticker}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Performance Statistics",
        "description": "This API call returns the funds main statistics including performance and risk metrics.\nThis data is updated daily.",
        "operationId": "performance_statistics_data_api_fundamentals_etf_performance_statistics__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTI",
                "VTI.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtfIWPerformance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/general/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "General",
        "description": "This API call returns the general information about the fund including\nDescription, Currency,  Country, Issuer and other.",
        "operationId": "general_data_api_fundamentals_funds_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundsFundamentalsGeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/key-stats/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Key Stats",
        "description": "This API call returns the key stats information about the fund.",
        "operationId": "key_stats_data_api_fundamentals_funds_key_stats__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundsIWKeyStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/asset_allocation/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Asset Allocation",
        "description": "This API call returns the percentage allocation of a fund across\nCash, Stocks, Bonds and Other. This data is updated daily.",
        "operationId": "asset_allocation_data_api_fundamentals_funds_asset_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseModel_b4fd076b"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/sector_allocation/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Sector Allocation",
        "description": "This API call returns the list of sectors across which the fund is allocated.\nThis list is updated daily.",
        "operationId": "sector_allocation_data_api_fundamentals_funds_sector_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sector Allocation Data Api Fundamentals Funds Sector Allocation  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SectorWeight"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/region_allocation/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Region Allocation",
        "description": "This API call returns the list of world geographic regions across which the fund is allocated.\nThis list is updated daily.",
        "operationId": "region_allocation_data_api_fundamentals_funds_region_allocation__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Region Allocation Data Api Fundamentals Funds Region Allocation  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorldRegion"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/holdings/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Holdings",
        "description": "This API call returns the list of stocks held by the fund.\nThis list is updated daily.",
        "operationId": "holdings_data_api_fundamentals_funds_holdings__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Holdings Data Api Fundamentals Funds Holdings  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FundsIWHoldings"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/daily-returns/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Daily Returns",
        "description": "This API call returns the historical daily returns of the fund.\nThis data is updated daily.",
        "operationId": "daily_returns_data_api_fundamentals_funds_daily_returns__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of start date",
              "type": "integer"
            },
            "example": "1612745183",
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Timestamp of start date",
              "type": "integer"
            },
            "example": "1633745183",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Daily Returns Data Api Fundamentals Funds Daily Returns  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyReturn"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/funds/performance_statistics/{ticker}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Performance Statistics",
        "description": "This API call returns the funds main statistics including performance and risk metrics.\nThis data is updated daily.",
        "operationId": "performance_statistics_data_api_fundamentals_funds_performance_statistics__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "VTSAX",
                "VTSAX.US"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundsIWPerformance"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/forex/general/{ticker}": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "General",
        "description": "This API call returns the general information about the Forex pair.",
        "operationId": "general_data_api_fundamentals_forex_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "EURUSD",
                "EURUSD.FOREX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForexGeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/forex/peers/{ticker}": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Peers",
        "description": "This API call returns the list of top moving peers for a forex pair.\nPeers are taken for the same base currency.\nThis list is updated daily.",
        "operationId": "peers_data_api_fundamentals_forex_peers__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "EURUSD",
                "EURUSD.FOREX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Peers Data Api Fundamentals Forex Peers  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForexPair"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/forex/performance/{ticker}": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Performance",
        "description": "This API call returns the main performance statistics for a forex pair.\nThis data is updated daily.",
        "operationId": "performance_data_api_fundamentals_forex_performance__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "EURUSD",
                "EURUSD.FOREX"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceChangePc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/crypto/general/{ticker}": {
      "get": {
        "tags": [
          "Crypto"
        ],
        "summary": "General",
        "description": "This API call returns the general information about the cryptocurrency pair.",
        "operationId": "general_data_api_fundamentals_crypto_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "ETH-USD",
                "ETH-USD.AGR"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoFundamentalsGeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/crypto/trade_volumes/{ticker}": {
      "get": {
        "tags": [
          "Crypto"
        ],
        "summary": "Trade Volumes",
        "description": "This API call returns the trading volumes on major exchanges for a cryptocurrency pair. This data is updated daily.",
        "operationId": "trade_volumes_data_api_fundamentals_crypto_trade_volumes__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "ETH-USD",
                "ETH-USD.AGR"
              ]
            },
            "name": "ticker",
            "in": "path"
          },
          {
            "description": "Currency",
            "required": true,
            "schema": {
              "title": "Currency",
              "type": "string",
              "description": "Currency"
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CryptoExchangesVolumes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/commodities/general/{ticker}": {
      "get": {
        "tags": [
          "Commodities"
        ],
        "summary": "General",
        "description": "This API call returns the general information about the commodity symbol.",
        "operationId": "general_data_api_fundamentals_commodities_general__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "LCO",
                "LCO.COMM"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommoditiesGeneralInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/commodities/peers/{ticker}": {
      "get": {
        "tags": [
          "Commodities"
        ],
        "summary": "Peers",
        "description": "This API call returns the list of top moving peers for a commodity symbol. This list is updated daily.",
        "operationId": "peers_data_api_fundamentals_commodities_peers__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "LCO",
                "LCO.COMM"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Peers Data Api Fundamentals Commodities Peers  Ticker  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommoditiesPeer"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/commodities/performance_statistics/{ticker}": {
      "get": {
        "tags": [
          "Commodities"
        ],
        "summary": "Performance Statistics",
        "description": "This API call returns the main performance statistics for a commodity symbol. This data is updated daily.",
        "operationId": "performance_statistics_data_api_fundamentals_commodities_performance_statistics__ticker__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "LCO",
                "LCO.COMM"
              ]
            },
            "name": "ticker",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceChangePc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/media/news": {
      "get": {
        "tags": [
          "News And Tweets"
        ],
        "summary": "News",
        "description": "This API call returns the latest market news tagged to a Stock, Index, ETF, Mutual Fund, Crypto,\nForex pair or Commodity symbol. The news are sourced from the list of news channels available in\nProfit.com Data API.",
        "operationId": "news_data_api_fundamentals_media_news_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "A symbol is a unique series of letters assigned to a security for trading purposes.",
              "example": "TSLA",
              "examples": [
                "TSLA",
                "EURUSD"
              ]
            },
            "name": "symbol",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "desc"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 News Data Api Fundamentals Media News Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalNews"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/fundamentals/media/tweets": {
      "get": {
        "tags": [
          "News And Tweets"
        ],
        "summary": "Tweets",
        "description": "This API call returns the latest tweets tagged to a Stock, Index, ETF, Mutual Fund, Crypto, Forex pair or\nCommodity symbol. The tweets are sourced from the list of twitter channels available in Profit.com Data API.",
        "operationId": "tweets_data_api_fundamentals_media_tweets_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "string",
              "description": "A symbol is a unique series of letters assigned to a security for trading purposes.",
              "example": "TSLA",
              "examples": [
                "TSLA",
                "EURUSD"
              ]
            },
            "name": "symbol",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "desc"
            },
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Tweets Data Api Fundamentals Media Tweets Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalTweets"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/earnings": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Earnings",
        "description": "This API call returns the historical estimated and reported earnings data made by stock companies.\nEarnings estimates are sourced from both sell-side and buy-side analysts.\nThe list of supported stock symbols can be found here.",
        "operationId": "earnings_data_api_economic_calendar_earnings_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": [
                "TSLA",
                "TSLA.US"
              ]
            },
            "name": "ticker",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-01-01",
              "example": "2022-01-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Country Iso",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "US"
            ],
            "name": "country_iso",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sector",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "Consumer Cyclical"
            ],
            "name": "sector",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "array",
              "items": {
                "type": "string",
                "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
                "example": "USD",
                "max_length": 3,
                "examples": [
                  "USD",
                  "GBP",
                  "EUR"
                ],
                "min_length": 3
              }
            },
            "example": [
              "USD"
            ],
            "name": "currency",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Earnings Data Api Economic Calendar Earnings Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EarningEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/dividends": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Dividends",
        "description": "This API call returns the list of historical and upcoming historical dividend payouts made by stock companies.\nThe list of supported stock symbols can be found here.",
        "operationId": "dividends_data_api_economic_calendar_dividends_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "example": "SAGCV.HE"
            },
            "name": "ticker",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-05-01",
              "example": "2022-05-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Country Iso",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "FI"
            ],
            "name": "country_iso",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sector",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "Consumer Cyclical",
            "name": "sector",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "array",
              "items": {
                "type": "string",
                "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
                "example": "USD",
                "max_length": 3,
                "examples": [
                  "USD",
                  "GBP",
                  "EUR"
                ],
                "min_length": 3
              }
            },
            "example": "EUR",
            "name": "currency",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Dividends Data Api Economic Calendar Dividends Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DividendEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/splits": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Splits",
        "description": "This API call returns the list of historical and upcoming stock splits made by stock companies.\nThe list of supported stock symbols can be found here.",
        "operationId": "splits_data_api_economic_calendar_splits_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "example": "IVPM.LSE"
            },
            "name": "ticker",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-05-01",
              "example": "2022-05-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Country Iso",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "UK"
            ],
            "name": "country_iso",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sector",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "Financial Services",
            "name": "sector",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "array",
              "items": {
                "type": "string",
                "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
                "example": "USD",
                "max_length": 3,
                "examples": [
                  "USD",
                  "GBP",
                  "EUR"
                ],
                "min_length": 3
              }
            },
            "example": "GBX",
            "name": "currency",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Splits Data Api Economic Calendar Splits Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitsEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/ipos": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Ipos",
        "description": "This API call returns the list of historical and upcoming IPOs made by stock companies.\nThe list of supported stock symbols can be found here.",
        "operationId": "ipos_data_api_economic_calendar_ipos_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "example": "PEPG.US"
            },
            "name": "ticker",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-05-01",
              "example": "2022-05-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Country Iso",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "US"
            ],
            "name": "country_iso",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Sector",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "Healthcare"
            ],
            "name": "sector",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "array",
              "items": {
                "type": "string",
                "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
                "example": "USD",
                "max_length": 3,
                "examples": [
                  "USD",
                  "GBP",
                  "EUR"
                ],
                "min_length": 3
              }
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Ipos Data Api Economic Calendar Ipos Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IposEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/crypto": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Crypto",
        "description": "This API call returns the list of historical and upcoming major events in the crypto and blockchain ecosystems.\nThe list of supported Crypto symbols can be found here.",
        "operationId": "crypto_data_api_economic_calendar_crypto_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Ticker",
              "type": "string",
              "example": "XMR-USD.AGR"
            },
            "name": "ticker",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-05-01",
              "example": "2022-05-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-08-01"
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "deprecated": true,
            "schema": {
              "title": "Important",
              "type": "boolean"
            },
            "example": true,
            "name": "important",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EventImpact"
            },
            "example": "high",
            "name": "impact",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Source Reliable",
              "type": "boolean"
            },
            "example": true,
            "name": "source_reliable",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Tag",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "Hard fork"
            ],
            "name": "tag",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Symbol",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "XMR"
            ],
            "name": "symbol",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Crypto Data Api Economic Calendar Crypto Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CryptoEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/forex": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Forex",
        "description": "This API call returns the list of historical and upcoming major economic events impacting the Forex market.\nThe list of supported Forex symbols can be found here.",
        "operationId": "forex_data_api_economic_calendar_forex_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-05-01",
              "example": "2022-05-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Country Iso",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "TR"
            ],
            "name": "country_iso",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "array",
              "items": {
                "type": "string",
                "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
                "example": "USD",
                "max_length": 3,
                "examples": [
                  "USD",
                  "GBP",
                  "EUR"
                ],
                "min_length": 3
              }
            },
            "example": [
              "TRY"
            ],
            "name": "currency",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Impact",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "low",
            "name": "impact",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Forex Data Api Economic Calendar Forex Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForexEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/data-api/economic_calendar/commodities": {
      "get": {
        "tags": [
          "Economic Calendar"
        ],
        "summary": "Commodities",
        "description": "This API call returns the list of historical and upcoming major economic events impacting the\ncommodity market.",
        "operationId": "commodities_data_api_economic_calendar_commodities_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Start Date",
              "type": "string",
              "description": "ISO Date as string",
              "default": "2022-05-01",
              "example": "2022-05-01"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Date",
              "type": "string",
              "description": "ISO Date as string",
              "example": "2022-01-01",
              "examples": [
                "2022-01-01",
                "2022-05-15"
              ]
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Country Iso",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "US",
            "name": "country_iso",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Currency",
              "type": "array",
              "items": {
                "type": "string",
                "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
                "example": "USD",
                "max_length": 3,
                "examples": [
                  "USD",
                  "GBP",
                  "EUR"
                ],
                "min_length": 3
              }
            },
            "example": "USD",
            "name": "currency",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Impact",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "low",
            "name": "impact",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Group",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "Metals",
            "name": "group",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ],
              "default": "asc"
            },
            "name": "sort_order",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 100.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Commodities Data Api Economic Calendar Commodities Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommodityEconomicEvent"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/real-time": {
      "post": {
        "tags": [
          "Websockets"
        ],
        "summary": "Real Time Prices",
        "description": "This method allows you to get real-time prices and volume streaming for specific tickers",
        "operationId": "real_time_prices_real_time_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TickSubsMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tick"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Action": {
        "title": "Action",
        "enum": [
          "subscribe",
          "unsubscribe"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Allocation": {
        "title": "Allocation",
        "required": [
          "Long",
          "Short",
          "NetAssets"
        ],
        "type": "object",
        "properties": {
          "Long": {
            "title": "Long %",
            "type": "number",
            "example": 0.05517
          },
          "Short": {
            "title": "Short %",
            "type": "number",
            "example": 0.13
          },
          "NetAssets": {
            "title": "Net Assets %",
            "type": "number",
            "example": 0.005517
          }
        }
      },
      "AnalystsRecommendationsFundamentals": {
        "title": "AnalystsRecommendationsFundamentals",
        "required": [
          "sentiment",
          "recommendation",
          "sri",
          "records"
        ],
        "type": "object",
        "properties": {
          "sentiment": {
            "$ref": "#/components/schemas/Sentiment"
          },
          "recommendation": {
            "$ref": "#/components/schemas/Recommendation"
          },
          "sri": {
            "title": "Sri",
            "type": "number",
            "example": 0.270833333333333
          },
          "records": {
            "title": "Records",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StocksRecommendation"
            }
          }
        }
      },
      "AssetAllocationElement": {
        "title": "AssetAllocationElement",
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Benchmark": {
            "title": "Benchmark",
            "type": "number",
            "example": 0,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "CategoryAverage": {
            "title": "Categoryaverage",
            "type": "number",
            "example": 1.2,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Long": {
            "title": "Long Percentage",
            "type": "number",
            "example": 0.07,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Short": {
            "title": "Short Percentage",
            "type": "number",
            "example": 0.06,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Net": {
            "title": "Net Percentage",
            "type": "number",
            "example": 0.01,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Type": {
            "title": "Type",
            "type": "string",
            "example": "Cash",
            "tags": [
              "IW Fundamentals"
            ]
          }
        }
      },
      "AssetClass": {
        "title": "AssetClass",
        "enum": [
          "CRYPTO",
          "ETF",
          "COMMODITIES",
          "OPTIONS",
          "FUNDS",
          "FUTURES",
          "BONDS",
          "RATE",
          "INDEXES",
          "FOREX",
          "STOCKS"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AvailableMarketState": {
        "title": "AvailableMarketState",
        "enum": [
          "P",
          "O",
          "A"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "BalanceSheetReport": {
        "title": "BalanceSheetReport",
        "type": "object",
        "properties": {
          "totalAssets": {
            "title": "Totalassets",
            "type": "number",
            "example": 11551000000
          },
          "totalCurrentAssets": {
            "title": "Totalcurrentassets",
            "type": "number",
            "example": 10300000000
          },
          "cashAndShortTermInvestments": {
            "title": "Cashandshortterminvestments",
            "type": "number",
            "example": 8261000000
          },
          "cash": {
            "title": "Cash",
            "type": "number",
            "example": 3491000000
          },
          "shortTermInvestments": {
            "title": "Shortterminvestments",
            "type": "number",
            "example": 4770000000
          },
          "netReceivables": {
            "title": "Netreceivables",
            "type": "number",
            "example": 895000000
          },
          "inventory": {
            "title": "Inventory",
            "type": "number",
            "example": 165000000
          },
          "otherCurrentAssets": {
            "title": "Othercurrentassets",
            "type": "number",
            "example": 562000000
          },
          "nonCurrrentAssetsOther": {
            "title": "Noncurrrentassetsother",
            "type": "number",
            "example": -5000000
          },
          "propertyPlantEquipment": {
            "title": "Propertyplantequipment",
            "type": "number",
            "example": 817000000
          },
          "propertyPlantAndEquipmentGross": {
            "title": "Propertyplantandequipmentgross",
            "type": "number",
            "example": 817000000
          },
          "accumulatedDepreciation": {
            "title": "Accumulateddepreciation",
            "type": "number",
            "example": 344
          },
          "longTermInvestments": {
            "title": "Longterminvestments",
            "type": "number",
            "example": 443335
          },
          "goodWill": {
            "title": "Goodwill",
            "type": "number",
            "example": 38000000
          },
          "intangibleAssets": {
            "title": "Intangibleassets",
            "type": "number",
            "example": 45380000
          },
          "otherAssets": {
            "title": "Otherassets",
            "type": "number",
            "example": 40380000
          },
          "netTangibleAssets": {
            "title": "Nettangibleassets",
            "type": "number",
            "example": 28380000
          },
          "nonCurrentAssetsTotal": {
            "title": "Noncurrentassetstotal",
            "type": "number",
            "example": 27080000
          },
          "liabilitiesAndStockholdersEquity": {
            "title": "Liabilitiesandstockholdersequity",
            "type": "number",
            "example": 380000
          },
          "totalLiab": {
            "title": "Totalliab",
            "type": "number",
            "example": 58380000
          },
          "totalCurrentLiabilities": {
            "title": "Totalcurrentliabilities",
            "type": "number",
            "example": 77680000
          },
          "shortTermDebt": {
            "title": "Shorttermdebt",
            "type": "number",
            "example": 97380000
          },
          "shortLongTermDebtTotal": {
            "title": "Shortlongtermdebttotal",
            "type": "number",
            "example": 24440000
          },
          "capitalLeaseObligations": {
            "title": "Capitalleaseobligations",
            "type": "number",
            "example": 44380000
          },
          "accountsPayable": {
            "title": "Accountspayable",
            "type": "number",
            "example": 66780000
          },
          "otherCurrentLiab": {
            "title": "Othercurrentliab",
            "type": "number",
            "example": 54440000
          },
          "nonCurrentLiabilitiesTotal": {
            "title": "Noncurrentliabilitiestotal",
            "type": "number",
            "example": 50000000
          },
          "longTermDebtTotal": {
            "title": "Longtermdebttotal",
            "type": "number",
            "example": 54440000
          },
          "longTermDebt": {
            "title": "Longtermdebt",
            "type": "number",
            "example": 9000000
          },
          "otherLiab": {
            "title": "Otherliab",
            "type": "number",
            "example": 8000000
          },
          "deferredLongTermLiab": {
            "title": "Deferredlongtermliab",
            "type": "number",
            "example": 7770000
          },
          "deferredLongTermAssetCharges": {
            "title": "Deferredlongtermassetcharges",
            "type": "number",
            "example": 46660000
          },
          "nonCurrentLiabilitiesOther": {
            "title": "Noncurrentliabilitiesother",
            "type": "number",
            "example": 5433024
          },
          "totalStockholderEquity": {
            "title": "Totalstockholderequity",
            "type": "number",
            "example": 9887444
          },
          "commonStockTotalEquity": {
            "title": "Commonstocktotalequity",
            "type": "number",
            "example": 7770000
          },
          "commonStock": {
            "title": "Commonstock",
            "type": "number",
            "example": 6342000000
          },
          "commonStockSharesOutstanding": {
            "title": "Commonstocksharesoutstanding",
            "type": "number",
            "example": 6342000000
          },
          "additionalPaidInCapital": {
            "title": "Additionalpaidincapital",
            "type": "number",
            "example": 9832000000
          },
          "treasuryStock": {
            "title": "Treasurystock",
            "type": "number",
            "example": 6180000000
          },
          "preferredStockTotalEquity": {
            "title": "Preferredstocktotalequity",
            "type": "number",
            "example": 5678000000
          },
          "preferredStockRedeemable": {
            "title": "Preferredstockredeemable",
            "type": "number",
            "example": 98555000
          },
          "retainedEarningsTotalEquity": {
            "title": "Retainedearningstotalequity",
            "type": "number",
            "example": 55567888
          },
          "retainedEarnings": {
            "title": "Retainedearnings",
            "type": "number",
            "example": 6342000000
          },
          "accumulatedOtherComprehensiveIncome": {
            "title": "Accumulatedothercomprehensiveincome",
            "type": "number",
            "example": 4246000000
          },
          "otherStockholderEquity": {
            "title": "Otherstockholderequity",
            "type": "number",
            "example": 6245019440
          },
          "totalPermanentEquity": {
            "title": "Totalpermanentequity",
            "type": "number",
            "example": 4332050000
          },
          "noncontrollingInterestInConsolidatedEntity": {
            "title": "Noncontrollinginterestinconsolidatedentity",
            "type": "number",
            "example": 6342000000
          },
          "temporaryEquityRedeemableNoncontrollingInterests": {
            "title": "Temporaryequityredeemablenoncontrollinginterests",
            "type": "number",
            "example": 788643
          },
          "accumulatedAmortization": {
            "title": "Accumulatedamortization",
            "type": "number",
            "example": 4560033
          },
          "negativeGoodwill": {
            "title": "Negativegoodwill",
            "type": "number",
            "example": 403322
          },
          "warrants": {
            "title": "Warrants",
            "type": "number",
            "example": 10100
          },
          "capitalSurpluse": {
            "title": "Capitalsurpluse",
            "type": "number",
            "example": 45000022
          }
        }
      },
      "BondsReferenceData": {
        "title": "BondsReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "US10Y.GBOND"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "US10Y"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "United States Government Bond 10Y"
          },
          "type": {
            "title": "Type of instrument",
            "type": "string",
            "example": "BOND"
          },
          "currency": {
            "title": "Currency according to ISO standard",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "country": {
            "title": "Name of country",
            "type": "string",
            "example": "United States"
          }
        }
      },
      "CommoditiesCategory": {
        "title": "CommoditiesCategory",
        "enum": [
          "AGRICULTURE",
          "ENERGY",
          "METALS"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CommoditiesGeneralInformation": {
        "title": "CommoditiesGeneralInformation",
        "required": [
          "ticker",
          "symbol",
          "name",
          "group"
        ],
        "type": "object",
        "properties": {
          "logo_url": {
            "title": "Logo URL",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "https://cdn.profit.com/logo/commodities/energy.svg"
          },
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "LCO.COMM"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "LCO"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Instrument long name",
            "example": "ICE Brent Crude"
          },
          "group": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommoditiesCategory"
              }
            ],
            "example": "ENERGY",
            "tags": [
              "Data Api"
            ]
          },
          "country": {
            "title": "Country",
            "type": "string",
            "example": "United States",
            "tags": [
              "Base Information",
              "Stats Table",
              "Data Api"
            ]
          },
          "units": {
            "title": "Unit",
            "type": "string",
            "example": "USD/bbl",
            "tags": [
              "Base Information",
              "Stats Table",
              "Data Api"
            ]
          }
        }
      },
      "CommoditiesPeer": {
        "title": "CommoditiesPeer",
        "required": [
          "ticker",
          "symbol",
          "name",
          "last_price",
          "unit",
          "change_percentage"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "NG.COMM"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "NG"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Natural Gas"
          },
          "last_price": {
            "title": "Last Price",
            "type": "number",
            "example": 4.96
          },
          "unit": {
            "title": "Unit",
            "type": "string",
            "example": "USD/MMBtu"
          },
          "change_percentage": {
            "title": "Change Percentage",
            "type": "number",
            "example": 4.39907387918332
          }
        }
      },
      "CommodityEconomicEvent": {
        "title": "CommodityEconomicEvent",
        "required": [
          "country_iso",
          "currency",
          "name",
          "impact",
          "time",
          "event_type"
        ],
        "type": "object",
        "properties": {
          "actual": {
            "title": "Actual",
            "type": "number",
            "example": 0.1
          },
          "country_iso": {
            "title": "Country Iso",
            "type": "string",
            "example": "US"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "estimate": {
            "title": "Estimate",
            "type": "number",
            "example": 0.7
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Construction Spending MM "
          },
          "impact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventImpact"
              }
            ],
            "example": "low"
          },
          "previous": {
            "title": "Previous",
            "type": "number",
            "example": 0.5
          },
          "time": {
            "title": "Time",
            "type": "integer",
            "example": 1651500000
          },
          "event_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicEventType"
              }
            ],
            "example": "commodities"
          },
          "group": {
            "title": "Group",
            "type": "string",
            "example": "Metals",
            "projection": "$category"
          }
        }
      },
      "CommodityReferenceData": {
        "title": "CommodityReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "LCO.COMM"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "LCO"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "ICE Brent Crude"
          },
          "type": {
            "title": "Symbol",
            "type": "string",
            "example": "Commodity"
          },
          "group": {
            "title": "Group to which currency pair belongs",
            "allOf": [
              {
                "$ref": "#/components/schemas/CommoditiesCategory"
              }
            ],
            "example": "ENERGY"
          }
        }
      },
      "CryptoEconomicEvent": {
        "title": "CryptoEconomicEvent",
        "required": [
          "symbol",
          "caption",
          "source",
          "source_reliable",
          "important",
          "name",
          "logo_url",
          "social_info"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "XMR-USD.AGR"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "XMR"
          },
          "caption": {
            "title": "Caption",
            "type": "string",
            "example": "Network Upgrade"
          },
          "source": {
            "title": "Source",
            "type": "string",
            "example": "https://coindar.org/en/event/monero-xmr-network-upgrade-70770"
          },
          "source_reliable": {
            "title": "Source Reliable",
            "type": "boolean",
            "example": true
          },
          "important": {
            "title": "Important",
            "type": "boolean",
            "example": true
          },
          "public_date": {
            "title": "Public Date",
            "type": "integer",
            "example": 1650483900
          },
          "start_date": {
            "title": "Start Date",
            "type": "integer",
            "example": 1657929600
          },
          "end_date": {
            "title": "End Date",
            "type": "integer"
          },
          "price_change": {
            "title": "Price Change",
            "type": "number",
            "example": -8.32
          },
          "tag": {
            "title": "Tag",
            "type": "string",
            "example": "Hard fork"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Monero"
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "https://cdn.profit.com/logo/crypto/XMR.png"
          },
          "social_info": {
            "$ref": "#/components/schemas/SocialInfo"
          }
        }
      },
      "CryptoExchangeInfo": {
        "title": "CryptoExchangeInfo",
        "required": [
          "name",
          "volume"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Coinbase"
          },
          "volume": {
            "title": "Volume",
            "type": "number",
            "example": 693137716.870023
          }
        }
      },
      "CryptoExchangesVolumes": {
        "title": "CryptoExchangesVolumes",
        "required": [
          "currency",
          "exchanges"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "title": "Currency",
            "type": "string",
            "example": "USD"
          },
          "exchanges": {
            "title": "Exchanges",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptoExchangeInfo"
            }
          }
        }
      },
      "CryptoFundamentalsGeneralInformation": {
        "title": "CryptoFundamentalsGeneralInformation",
        "required": [
          "CoinName",
          "Description"
        ],
        "type": "object",
        "properties": {
          "CoinName": {
            "title": "Coinname",
            "type": "string",
            "example": "Ethereum",
            "tags": [
              "GI"
            ]
          },
          "Description": {
            "title": "Description",
            "type": "string",
            "example": "Ethereum (ETH) is a cryptocurrency . Users are able to generate ETH through the\nprocess of mining. Ethereum has a current supply of 119,410,432.9365. The last known price of\nEthereum is 2,751.03730076 USD and is up 0.45 over the last 24 hours. It is currently trading on 5484 active market(s)\nwith $12,508,426,559.89 traded over the last 24 hours. More information can be found at https://www.ethereum.org/.",
            "tags": [
              "GI"
            ]
          },
          "Algorithm": {
            "title": "Algorithm",
            "type": "string",
            "example": "Ethash",
            "tags": [
              "GI"
            ]
          },
          "AssetLaunchDate": {
            "title": "Assetlaunchdate",
            "type": "string",
            "example": "2015-07-30",
            "tags": [
              "GI"
            ]
          },
          "IsTrading": {
            "title": "Istrading",
            "type": "boolean",
            "example": true,
            "tags": [
              "GI"
            ]
          },
          "Rank": {
            "title": "Rank",
            "type": "integer",
            "example": 2,
            "tags": [
              "GI"
            ]
          },
          "Urls": {
            "title": "Urls",
            "type": "object",
            "example": "https://www.ethereum.org/",
            "tags": [
              "GI"
            ]
          },
          "DateAdded": {
            "title": "Dateadded",
            "type": "string",
            "example": "2013-04-28T00:00:00.000Z",
            "tags": [
              "GI"
            ]
          },
          "ProofType": {
            "title": "Prooftype",
            "type": "string",
            "example": "PoW",
            "tags": [
              "GI"
            ]
          },
          "Difficulty": {
            "title": "Difficulty",
            "type": "number",
            "example": 21659344833265,
            "tags": [
              "GI"
            ]
          },
          "MaxSupply": {
            "title": "Maxsupply",
            "type": "number",
            "example": 21000000,
            "tags": [
              "GI"
            ]
          },
          "CirculatingSupply": {
            "title": "Circulatingsupply",
            "type": "number",
            "example": 18860475,
            "tags": [
              "GI"
            ]
          },
          "TotalSupply": {
            "title": "Totalsupply",
            "type": "number",
            "example": 18860475,
            "tags": [
              "GI"
            ]
          },
          "Volumes": {
            "title": "Volumes",
            "allOf": [
              {
                "$ref": "#/components/schemas/VolumesTo"
              }
            ],
            "tags": [
              "GI"
            ]
          },
          "Tags": {
            "title": "Tags",
            "type": "array",
            "items": {},
            "example": [
              "mineable",
              "pow"
            ],
            "tags": [
              "GI"
            ]
          }
        }
      },
      "CryptoReferenceData": {
        "title": "CryptoReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "BTC-USD.AGR"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "BTC"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "Bitcoin"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "default": "crypto",
            "example": "Currency"
          },
          "algorithm": {
            "title": "Name of algorithm ",
            "type": "string",
            "example": "SHA-256"
          }
        }
      },
      "DailyReturn": {
        "title": "DailyReturn",
        "required": [
          "daily_return",
          "time"
        ],
        "type": "object",
        "properties": {
          "daily_return": {
            "title": "Daily return",
            "type": "number",
            "example": 0.03
          },
          "time": {
            "title": "Time",
            "type": "integer",
            "description": "Unix timestamp",
            "example": "1617840000"
          }
        }
      },
      "DividendEconomicEvent": {
        "title": "DividendEconomicEvent",
        "required": [
          "symbol",
          "date",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "SAGCV.HE"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "SAGCV.HE"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2022-05-02",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "logo_url": {
            "title": "Logo Url",
            "type": "string",
            "example": "https://cdn.profit.com/logo/stocks/SAGCV.png"
          },
          "sector": {
            "title": "Sector",
            "type": "string",
            "example": "Consumer Cyclical"
          },
          "country_iso": {
            "title": "Country Iso",
            "type": "string",
            "example": "FI"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Saga Furs Oyj C"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "example": "EUR"
          },
          "amount": {
            "title": "Amount",
            "type": "number",
            "example": 1.99
          },
          "adjusted_amount": {
            "title": "Adjusted Amount",
            "type": "number",
            "example": 1.99
          },
          "pay_date": {
            "title": "Pay Date",
            "type": "string",
            "example": "2022-05-10"
          },
          "record_date": {
            "title": "Record Date",
            "type": "string",
            "example": "2022-05-03"
          },
          "declaration_date": {
            "title": "Declaration Date",
            "type": "string",
            "example": "2022-01-26"
          }
        }
      },
      "DividendRate": {
        "title": "DividendRate",
        "required": [
          "date",
          "rate"
        ],
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "1989-08-21",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "rate": {
            "title": "Rate",
            "type": "number",
            "example": 0.0009
          }
        }
      },
      "ETFReferenceData": {
        "title": "ETFReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "VTI.US"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "VTI"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "Vanguard Index Funds"
          },
          "type": {
            "title": "Type of instrument",
            "type": "string",
            "example": "ETF"
          },
          "currency": {
            "title": "Currency according to ISO standard",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "country": {
            "title": "Name of country",
            "type": "string",
            "example": "United States"
          },
          "exchange": {
            "title": "Name of exchange",
            "type": "string",
            "example": "NYSE ARCA"
          },
          "issuer": {
            "title": "Name of issuer company",
            "type": "string",
            "example": "Vanguard"
          }
        }
      },
      "EarningEconomicEvent": {
        "title": "EarningEconomicEvent",
        "required": [
          "symbol",
          "date",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "TSLA.US"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "TSLA"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2022-01-01",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "logo_url": {
            "title": "Logo Url",
            "type": "string",
            "example": "https://cdn.profit.com/logo/stocks/TSLA.png"
          },
          "sector": {
            "title": "Sector",
            "type": "string",
            "example": "Consumer Cyclical"
          },
          "country_iso": {
            "title": "Country Iso",
            "type": "string",
            "example": "US"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Tesla, Inc"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "example": "USD"
          },
          "eps_actual": {
            "title": "Eps Actual",
            "type": "number",
            "example": 2.54
          },
          "eps_estimate": {
            "title": "Eps Estimate",
            "type": "number",
            "example": 1.9577
          },
          "hour": {
            "title": "Hour",
            "type": "string",
            "example": "amc"
          },
          "quarter": {
            "title": "Quarter",
            "type": "integer",
            "example": 4
          },
          "revenue_actual": {
            "title": "Revenue Actual",
            "type": "number",
            "example": 17719000000.0
          },
          "revenue_estimate": {
            "title": "Revenue Estimate",
            "type": "number",
            "example": 15305587650.0
          },
          "year": {
            "title": "Year",
            "type": "integer",
            "example": 2021
          },
          "total_shares_value": {
            "title": "Total Shares Value",
            "type": "integer",
            "example": 265503
          }
        }
      },
      "EarningHistory": {
        "title": "EarningHistory",
        "required": [
          "reportDate",
          "date"
        ],
        "type": "object",
        "properties": {
          "reportDate": {
            "title": "Reportdate",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2003-09-30",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2017-03-31",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "beforeAfterMarket": {
            "title": "Beforeaftermarket",
            "type": "string",
            "example": "AfterMarket"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "epsActual": {
            "title": "Epsactual",
            "type": "number",
            "example": 0.525
          },
          "epsEstimate": {
            "title": "Epsestimate",
            "type": "number",
            "example": 0.425
          },
          "epsDifference": {
            "title": "Epsdifference",
            "type": "number",
            "example": 0.02
          },
          "surprisePercent": {
            "title": "Surprisepercent",
            "type": "number",
            "example": 3.9604
          }
        }
      },
      "EarningTrendEPS": {
        "title": "EarningTrendEPS",
        "required": [
          "epsTrendCurrent",
          "epsTrend7daysAgo",
          "epsTrend30daysAgo",
          "epsTrend60daysAgo",
          "epsTrend90daysAgo"
        ],
        "type": "object",
        "properties": {
          "epsTrendCurrent": {
            "title": "Epstrendcurrent",
            "type": "number",
            "example": 6.1
          },
          "epsTrend7daysAgo": {
            "title": "Epstrend7Daysago",
            "type": "number",
            "example": 5.99
          },
          "epsTrend30daysAgo": {
            "title": "Epstrend30Daysago",
            "type": "number",
            "example": 5.76
          },
          "epsTrend60daysAgo": {
            "title": "Epstrend60Daysago",
            "type": "number",
            "example": 5.66
          },
          "epsTrend90daysAgo": {
            "title": "Epstrend90Daysago",
            "type": "number",
            "example": 5.9
          }
        }
      },
      "EarningTrendEPSRevisions": {
        "title": "EarningTrendEPSRevisions",
        "required": [
          "epsRevisionsUpLast7days",
          "epsRevisionsUpLast30days",
          "epsRevisionsDownLast30days"
        ],
        "type": "object",
        "properties": {
          "epsRevisionsUpLast7days": {
            "title": "Epsrevisionsuplast7Days",
            "type": "number",
            "example": 5.99
          },
          "epsRevisionsUpLast30days": {
            "title": "Epsrevisionsuplast30Days",
            "type": "number",
            "example": 5.98
          },
          "epsRevisionsDownLast30days": {
            "title": "Epsrevisionsdownlast30Days",
            "type": "number",
            "example": 6.02
          },
          "epsRevisionsDownLast90days": {
            "title": "Epsrevisionsdownlast90Days",
            "type": "number",
            "example": 5.59
          }
        }
      },
      "EarningTrendEarnEstimate": {
        "title": "EarningTrendEarnEstimate",
        "required": [
          "earningsEstimateAvg",
          "earningsEstimateLow",
          "earningsEstimateHigh",
          "earningsEstimateNumberOfAnalysts"
        ],
        "type": "object",
        "properties": {
          "earningsEstimateAvg": {
            "title": "Earningsestimateavg",
            "type": "number",
            "example": 6.1
          },
          "earningsEstimateLow": {
            "title": "Earningsestimatelow",
            "type": "number",
            "example": 5.26
          },
          "earningsEstimateHigh": {
            "title": "Earningsestimatehigh",
            "type": "number",
            "example": 6.82
          },
          "earningsEstimateYearAgoEps": {
            "title": "Earningsestimateyearagoeps",
            "type": "number",
            "example": 5.71
          },
          "earningsEstimateNumberOfAnalysts": {
            "title": "Earningsestimatenumberofanalysts",
            "type": "number",
            "example": 32
          },
          "earningsEstimateGrowth": {
            "title": "Earningsestimategrowth",
            "type": "number",
            "example": 0.068
          }
        }
      },
      "EarningTrendRevenueEstimate": {
        "title": "EarningTrendRevenueEstimate",
        "required": [
          "revenueEstimateAvg",
          "revenueEstimateLow",
          "revenueEstimateHigh",
          "revenueEstimateNumberOfAnalysts"
        ],
        "type": "object",
        "properties": {
          "revenueEstimateAvg": {
            "title": "Revenueestimateavg",
            "type": "number",
            "example": 6.1
          },
          "revenueEstimateLow": {
            "title": "Revenueestimatelow",
            "type": "number",
            "example": 5.26
          },
          "revenueEstimateHigh": {
            "title": "Revenueestimatehigh",
            "type": "number",
            "example": 6.82
          },
          "revenueEstimateYearAgoEps": {
            "title": "Revenueestimateyearagoeps",
            "type": "number",
            "example": 5.71
          },
          "revenueEstimateNumberOfAnalysts": {
            "title": "Revenueestimatenumberofanalysts",
            "type": "number",
            "example": 32
          },
          "revenueEstimateGrowth": {
            "title": "Revenueestimategrowth",
            "type": "number",
            "example": 0.068
          }
        }
      },
      "EconomicEventType": {
        "title": "EconomicEventType",
        "enum": [
          "forex",
          "commodities"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EtfFundamentalsHoldings": {
        "title": "EtfFundamentalsHoldings",
        "type": "object",
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string",
            "example": "Tesla Inc."
          },
          "Assets_%": {
            "title": "Assets %",
            "type": "number",
            "example": 1.64
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string",
            "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
            "example": "TSLA.US"
          },
          "cumulative_equity": {
            "title": "Cumulative Equity",
            "type": "number",
            "default": 0,
            "example": 18.86
          },
          "change_1y": {
            "title": "Change 1Y",
            "type": "number",
            "example": 5.46
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "https://cdn.profit.com/logo/stocks/TSLA.png"
          }
        }
      },
      "EtfGeneralInformation": {
        "title": "EtfGeneralInformation",
        "required": [
          "Symbol",
          "Type",
          "Exchange",
          "CurrencyCode",
          "CountryName",
          "CountryISO",
          "CurrencyName"
        ],
        "type": "object",
        "properties": {
          "Symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "VTI"
          },
          "Type": {
            "title": "Type",
            "type": "string",
            "example": "ETF"
          },
          "Exchange": {
            "title": "Exchange",
            "type": "string",
            "example": "NYSE ARCA"
          },
          "CurrencyCode": {
            "title": "Currency Code",
            "type": "string",
            "example": "USD"
          },
          "CountryName": {
            "title": "Country Name",
            "type": "string",
            "example": "USA"
          },
          "CountryISO": {
            "title": "Country ISO",
            "type": "string",
            "example": "US"
          },
          "CurrencyName": {
            "title": "Currency Name",
            "type": "string",
            "example": "US Dollar"
          },
          "TotalHoldings": {
            "title": "Totalholdings",
            "type": "integer",
            "default": 0
          },
          "Description": {
            "title": "Description",
            "type": "string",
            "example": "The investment seeks to track the performance of the CRSP US Total Market Index that\nmeasures the investment return of the overall stock market. The fund employs an indexing investment approach designed\nto track the performance of the index, which represents approximately 100% of the investable U.S. stock market and\nincludes large-, mid-, small-, and micro-cap stocks regularly traded on the New York Stock Exchange and Nasdaq.\nIt invests by sampling the index, meaning that it holds a broadly diversified collection of securities that, in the\naggregate, approximates the full index in terms of key characteristics.",
            "tags": [
              "GI"
            ]
          },
          "Category": {
            "title": "Category",
            "type": "string",
            "example": "Large Blend",
            "tags": [
              "GI"
            ]
          },
          "UpdatedAt": {
            "title": "Updatedat",
            "type": "string",
            "example": "2021-11-01",
            "tags": [
              "GI"
            ]
          },
          "ISIN": {
            "title": "ISIN",
            "type": "string",
            "example": "US2330518794",
            "tags": [
              "GI"
            ]
          },
          "Company_Name": {
            "title": "Company Name",
            "type": "string",
            "example": "Xtrackers",
            "tags": [
              "GI"
            ]
          },
          "Company_URL": {
            "title": "Company Url",
            "type": "string",
            "example": "http://dws.com",
            "tags": [
              "GI"
            ]
          },
          "ETF_URL": {
            "title": "ETF URL",
            "type": "string",
            "example": "https://etfus.deutscheam.com/US/EN/Product-Detail-Page/ASHR",
            "tags": [
              "GI"
            ]
          },
          "Inception_Date": {
            "title": "Inception Date",
            "type": "string",
            "example": "2013-11-06",
            "tags": [
              "GI"
            ]
          }
        }
      },
      "EtfIWKeyStats": {
        "title": "EtfIWKeyStats",
        "required": [
          "MarketCapitalisation"
        ],
        "type": "object",
        "properties": {
          "Yield": {
            "title": "Yield",
            "type": "string",
            "example": 0.8,
            "tags": [
              "IW Key Stats"
            ]
          },
          "DividendPayingFrequency": {
            "title": "Dividendpayingfrequency",
            "type": "string",
            "example": "NA",
            "tags": [
              "IW Key Stats"
            ]
          },
          "MaxAnnualMgmtCharge": {
            "title": "Maxannualmgmtcharge",
            "type": "string",
            "example": 0.13,
            "tags": [
              "IW Key Stats"
            ]
          },
          "OngoingCharge": {
            "title": "Ongoingcharge",
            "type": "string",
            "example": 12.33,
            "tags": [
              "IW Key Stats"
            ]
          },
          "DateOngoingCharge": {
            "title": "Dateongoingcharge",
            "type": "string",
            "example": "0000-00-00",
            "tags": [
              "IW Key Stats"
            ]
          },
          "NetExpenseRatio": {
            "title": "Netexpenseratio",
            "type": "string",
            "example": "0.00350",
            "tags": [
              "IW Key Stats"
            ]
          },
          "AnnualHoldingsTurnover": {
            "title": "Annualholdingsturnover",
            "type": "string",
            "example": "0.133",
            "tags": [
              "IW Key Stats"
            ]
          },
          "TotalAssets": {
            "title": "Totalassets",
            "type": "number",
            "example": 705437504.2,
            "tags": [
              "IW Key Stats"
            ]
          },
          "AverageMktCapMil": {
            "title": "Averagemktcapmil",
            "type": "number",
            "example": 38551.29074,
            "tags": [
              "IW Key Stats"
            ]
          },
          "MarketCapitalisation": {
            "title": "Marketcapitalisation",
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketCapitalization"
              }
            ],
            "tags": [
              "IW Key Stats"
            ]
          }
        }
      },
      "EtfIWPerformance": {
        "title": "EtfIWPerformance",
        "required": [
          "expreturn_3y",
          "sharpratio_3y"
        ],
        "type": "object",
        "properties": {
          "volatility_1y": {
            "title": "Volatility 1Y",
            "type": "number",
            "example": 13.9877785528853
          },
          "volatility_3y": {
            "title": "Volatility 3Y",
            "type": "number",
            "example": 22.6839041818957
          },
          "expreturn_3y": {
            "title": "Expreturn 3Y",
            "type": "number",
            "example": 73.15525330036
          },
          "sharpratio_3y": {
            "title": "Sharpratio 3Y",
            "type": "number",
            "example": 0.806766506608551
          },
          "change_ytd": {
            "title": "Change Ytd",
            "type": "number",
            "example": -5.34294234592445
          },
          "change_1y": {
            "title": "Change 1Y",
            "type": "number",
            "example": 17.3629840825105
          },
          "change_3y": {
            "title": "Change 3Y",
            "type": "number",
            "example": 73.15525330036
          },
          "change_5y": {
            "title": "Change 5Y",
            "type": "number",
            "example": 112.278806579584
          },
          "change_10y": {
            "title": "Change 10Y",
            "type": "number",
            "example": 302.821548679118
          }
        }
      },
      "EventImpact": {
        "title": "EventImpact",
        "enum": [
          "high",
          "medium",
          "low"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ExchangeReferenceData": {
        "title": "ExchangeReferenceData",
        "required": [
          "name",
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name of exchange",
            "type": "string",
            "example": "USA Stocks"
          },
          "code": {
            "title": "Mic code of exchange",
            "type": "string",
            "example": "US"
          }
        }
      },
      "ExchangeTypes": {
        "title": "ExchangeTypes",
        "enum": [
          "stocks",
          "etfs",
          "indexes"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ExternalNews": {
        "title": "ExternalNews",
        "required": [
          "source",
          "title",
          "url",
          "published_at"
        ],
        "type": "object",
        "properties": {
          "source": {
            "title": "Source",
            "type": "string",
            "example": "MarketWatch",
            "tags": [
              "Data Api",
              "Notification"
            ]
          },
          "title": {
            "title": "Title",
            "type": "string",
            "example": "Walmart's Flipkart, Amazon eyeing stake in Indian diagnostics chain Metropolis - Bloomberg",
            "tags": [
              "Data Api"
            ]
          },
          "url": {
            "title": "Url",
            "type": "string",
            "example": "https://www.marketwatch.com/story/rivian-warns-price-dispute-with-seat-supplier-could-impact-amazon-van-order-11652737531",
            "tags": [
              "Data Api"
            ]
          },
          "published_at": {
            "title": "Published At",
            "type": "integer",
            "example": 1652737500,
            "tags": [
              "Data Api"
            ]
          },
          "score": {
            "title": "Score",
            "allOf": [
              {
                "$ref": "#/components/schemas/Score"
              }
            ],
            "tags": [
              "Data Api"
            ]
          }
        }
      },
      "ExternalTweets": {
        "title": "ExternalTweets",
        "required": [
          "text",
          "created_at",
          "uname",
          "uscreen_name"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string",
            "example": "$AMZN: JP MORGAN CUTS TARGET PRICE TO $175 FROM $200",
            "tags": [
              "Data Api"
            ]
          },
          "created_at": {
            "title": "Created At",
            "type": "integer",
            "example": 1656490318,
            "tags": [
              "Data Api"
            ]
          },
          "uname": {
            "title": "Uname",
            "type": "string",
            "example": "*Walter Bloomberg",
            "tags": [
              "Data Api"
            ]
          },
          "uscreen_name": {
            "title": "Uscreen Name",
            "type": "string",
            "example": "DeItaone",
            "tags": [
              "Data Api"
            ]
          }
        }
      },
      "ForexCategory": {
        "title": "ForexCategory",
        "enum": [
          "MAJOR",
          "MINOR",
          "EMERGING MARKETS",
          "AUSTRALASIAN",
          "SCANDINAVIAN",
          "AMERICAS",
          "PACIFIC",
          "MIDDLE EAST",
          "AFRICA",
          "EXOTIC"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ForexEconomicEvent": {
        "title": "ForexEconomicEvent",
        "required": [
          "country_iso",
          "currency",
          "name",
          "impact",
          "time",
          "event_type"
        ],
        "type": "object",
        "properties": {
          "actual": {
            "title": "Actual",
            "type": "number",
            "example": 11.36
          },
          "country_iso": {
            "title": "Country Iso",
            "type": "string",
            "example": "TR"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "TRY",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "estimate": {
            "title": "Estimate",
            "type": "number"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "ITO Istanbul Retail Prices"
          },
          "impact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventImpact"
              }
            ],
            "example": "low"
          },
          "previous": {
            "title": "Previous",
            "type": "number",
            "example": 6.29
          },
          "time": {
            "title": "Time",
            "type": "integer",
            "example": 1651395600
          },
          "event_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicEventType"
              }
            ],
            "example": "forex"
          }
        }
      },
      "ForexGeneralInformation": {
        "title": "ForexGeneralInformation",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "EURUSD.FOREX"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "EURUSD"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Instrument long name",
            "example": "Euro / US Dollar"
          },
          "group": {
            "title": "Category",
            "allOf": [
              {
                "$ref": "#/components/schemas/ForexCategory"
              }
            ],
            "default": "EXOTIC",
            "example": "MAJOR"
          },
          "country": {
            "title": "Countries",
            "type": "string",
            "example": "Eurozone/United States",
            "tags": [
              "Base Information",
              "Stats Table",
              "Data Api"
            ]
          }
        }
      },
      "ForexPair": {
        "title": "ForexPair",
        "required": [
          "ticker",
          "symbol",
          "name",
          "last_price",
          "change_percentage"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "EURSCR.FOREX"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "EURSCR"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Euro / Seychelles Rupee"
          },
          "last_price": {
            "title": "Last Price",
            "type": "number",
            "example": 16.4312
          },
          "change_percentage": {
            "title": "Change Percentage",
            "type": "number",
            "example": 14.1769
          }
        }
      },
      "ForexReferenceData": {
        "title": "ForexReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name",
          "group",
          "currency_base",
          "currency_quote"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "EURUSD.FOREX"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "EURUSD"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "EURUSD"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "example": "Currency"
          },
          "group": {
            "title": "Group to which currency pair belongs to",
            "allOf": [
              {
                "$ref": "#/components/schemas/ForexCategory"
              }
            ],
            "example": "MAJOR"
          },
          "currency_base": {
            "title": "Base currency name according to ISO standard",
            "type": "string",
            "example": "EUR"
          },
          "currency_quote": {
            "title": "Quote currency name according to ISO standard",
            "type": "string",
            "example": "USD"
          }
        }
      },
      "FundsFundamentalsGeneralInformation": {
        "title": "FundsFundamentalsGeneralInformation",
        "required": [
          "Symbol",
          "Type",
          "Exchange",
          "CurrencyCode",
          "CountryName",
          "CountryISO",
          "CurrencyName"
        ],
        "type": "object",
        "properties": {
          "Symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "VTSAX"
          },
          "Type": {
            "title": "Type",
            "type": "string",
            "example": "FUND"
          },
          "Exchange": {
            "title": "Exchange",
            "type": "string",
            "example": "NMFQS"
          },
          "TotalHoldings": {
            "title": "Totalholdings",
            "type": "integer",
            "default": 0
          },
          "CurrencyCode": {
            "title": "Currency Code",
            "type": "string",
            "example": "USD",
            "tags": [
              "GI"
            ]
          },
          "CountryName": {
            "title": "Country Name",
            "type": "string",
            "example": "USA",
            "tags": [
              "GI"
            ]
          },
          "CountryISO": {
            "title": "Country ISO",
            "type": "string",
            "example": "US",
            "tags": [
              "GI"
            ]
          },
          "CurrencyName": {
            "title": "Currency Name",
            "type": "string",
            "example": "US Dollar",
            "tags": [
              "GI"
            ]
          },
          "ISIN": {
            "title": "ISIN",
            "type": "string",
            "example": "US9229087286",
            "tags": [
              "GI"
            ]
          },
          "CUSIP": {
            "title": "CUSIP",
            "type": "string",
            "example": "922908728",
            "tags": [
              "GI"
            ]
          },
          "Fund_Category": {
            "title": "Fund Category",
            "type": "string",
            "example": "Large Blend",
            "tags": [
              "GI"
            ]
          },
          "Fund_Family": {
            "title": "Fund Family",
            "type": "string",
            "example": "Vanguard",
            "tags": [
              "GI"
            ]
          },
          "Fund_Summary": {
            "title": "Fund Summary",
            "type": "string",
            "example": "The investment seeks to track the performance of the CRSP US Total Market Index that\nmeasures the investment return of the overall stock market.  The fund employs an indexing investment approach designed\nto track the performance of the index, which represents approximately 100% of the investable U.S. stock market and\nincludes large-, mid-, small-, and micro-cap stocks regularly traded on the New York Stock Exchange and Nasdaq.\nIt invests by sampling the index, meaning that it holds a broadly diversified collection of securities that, in the\naggregate, approximates the full index in terms of key characteristics.",
            "tags": [
              "GI"
            ]
          },
          "Update_Date": {
            "title": "Update Date",
            "type": "string",
            "example": "2021-10-17",
            "tags": [
              "GI"
            ]
          },
          "Inception_Date": {
            "title": "Inception Date",
            "type": "string",
            "example": "1988-02-17",
            "tags": [
              "GI"
            ]
          }
        }
      },
      "FundsIWHoldings": {
        "title": "FundsIWHoldings",
        "type": "object",
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string",
            "example": "Amazon.com Inc"
          },
          "Owned": {
            "title": "Owned",
            "type": "string",
            "example": "4,077,468"
          },
          "Change": {
            "title": "Change",
            "type": "string",
            "example": "15,632"
          },
          "Weight": {
            "title": "Weight",
            "type": "number",
            "example": 5.93
          },
          "Ticker": {
            "title": "Ticker",
            "type": "string",
            "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
            "example": "TSLA.US"
          },
          "cumulative_equity": {
            "title": "Cumulative Equity",
            "type": "number",
            "default": 0,
            "example": 5.71
          },
          "change_1y": {
            "title": "Change 1Y",
            "type": "number",
            "example": -52.877
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "https://cdn.profit.com/logo/stocks/AAPL.png"
          }
        }
      },
      "FundsIWKeyStats": {
        "title": "FundsIWKeyStats",
        "type": "object",
        "properties": {
          "FiscalYearEnd": {
            "title": "Fiscalyearend",
            "type": "string",
            "example": "December",
            "tags": [
              "IW Key Stats"
            ]
          },
          "PortfolioNetAssets": {
            "title": "Portfolionetassets",
            "type": "integer",
            "example": 999999999999,
            "tags": [
              "IW Key Stats"
            ]
          },
          "ShareClassNetAssets": {
            "title": "Shareclassnetassets",
            "type": "integer",
            "example": 315456960000,
            "tags": [
              "IW Key Stats"
            ]
          },
          "ExpenseRatio": {
            "title": "Expenseratio",
            "type": "number",
            "example": 0.02,
            "tags": [
              "IW Key Stats"
            ]
          },
          "ExpenseRatioDate": {
            "title": "Expenseratiodate",
            "type": "string",
            "example": "2021-04-29",
            "tags": [
              "IW Key Stats"
            ]
          }
        }
      },
      "FundsIWPerformance": {
        "title": "FundsIWPerformance",
        "type": "object",
        "properties": {
          "Yield": {
            "title": "Yield",
            "type": "string",
            "example": "0.0033"
          },
          "change_ytd": {
            "title": "Change Ytd",
            "type": "number",
            "example": -5.29091527730521
          },
          "change_1y": {
            "title": "Change 1Y",
            "type": "number",
            "example": 17.0220033738156
          },
          "change_3y": {
            "title": "Change 3Y",
            "type": "number",
            "example": 72.5794851445861
          },
          "change_5y": {
            "title": "Change 5Y",
            "type": "number",
            "example": 111.590137702725
          }
        }
      },
      "FundsReferenceData": {
        "title": "FundsReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "VTSAX.US"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "VTSAX"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "Vanguard Total Stock Market Index Fund Admiral Shares"
          },
          "type": {
            "title": "Type of instrument",
            "type": "string",
            "example": "FUND"
          },
          "currency": {
            "title": "Currency according to ISO standard",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "country": {
            "title": "Name of country",
            "type": "string",
            "example": "United States"
          },
          "exchange": {
            "title": "Name of exchange",
            "type": "string",
            "example": "NMFQS"
          },
          "issuer": {
            "title": "Name of issuer company",
            "type": "string",
            "example": "Vanguard"
          }
        }
      },
      "GeneralInformation": {
        "title": "GeneralInformation",
        "required": [
          "Type",
          "Name",
          "Exchange",
          "CurrencyCode",
          "CountryName",
          "CountryISO"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "title": "Description",
            "type": "string",
            "example": "The Dow Jones Industrial Average (DJIA) is a price-weighted average of 30 blue-chip stocks\nthat are generally the leaders in the United States industry.\nIt has been a widely followed indicator of the stock market since October 1, 1928."
          },
          "TotalComponents": {
            "title": "Totalcomponents",
            "type": "integer",
            "default": 0
          },
          "Type": {
            "title": "Type",
            "type": "string",
            "example": "INDEX",
            "tags": [
              "GI"
            ]
          },
          "Name": {
            "title": "Name",
            "type": "string",
            "example": "Dow Jones Industrial Average",
            "tags": [
              "GI"
            ]
          },
          "Exchange": {
            "title": "Exchange",
            "type": "string",
            "example": "INDX",
            "tags": [
              "GI"
            ]
          },
          "CurrencyCode": {
            "title": "Currencycode",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "tags": [
              "GI"
            ],
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "CountryName": {
            "title": "Countryname",
            "type": "string",
            "example": "USA",
            "tags": [
              "GI"
            ]
          },
          "CountryISO": {
            "title": "Countryiso",
            "type": "string",
            "example": "US",
            "tags": [
              "GI"
            ]
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "errors": {
            "title": "Errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "HolderPortfolio": {
        "title": "HolderPortfolio",
        "required": [
          "name",
          "date",
          "total_shares",
          "current_shares"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Vanguard Group Inc"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2021-06-30",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "total_shares": {
            "title": "Total Shares",
            "type": "number",
            "example": 7.6523
          },
          "total_assets": {
            "title": "Total Assets",
            "type": "number",
            "example": 4.3113
          },
          "current_shares": {
            "title": "Current Shares",
            "type": "integer",
            "example": 1264936543
          },
          "change": {
            "title": "Change",
            "type": "integer",
            "example": 25553808
          },
          "change_p": {
            "title": "Change P",
            "type": "number",
            "example": 2.0618
          }
        }
      },
      "IWCashFlowReport": {
        "title": "IWCashFlowReport",
        "type": "object",
        "properties": {
          "totalCashFromOperatingActivities": {
            "title": "Totalcashfromoperatingactivities",
            "type": "number",
            "example": 1193000000
          },
          "changeReceivables": {
            "title": "Changereceivables",
            "type": "number",
            "example": 174000
          },
          "changeToLiabilities": {
            "title": "Changetoliabilities",
            "type": "number",
            "example": 2333000
          },
          "totalCashflowsFromInvestingActivities": {
            "title": "Totalcashflowsfrominvestingactivities",
            "type": "number",
            "example": 7333000
          },
          "investments": {
            "title": "Investments",
            "type": "number",
            "example": 780009
          },
          "capitalExpenditures": {
            "title": "Capitalexpenditures",
            "type": "number",
            "example": 456773
          },
          "totalCashFromFinancingActivities": {
            "title": "Totalcashfromfinancingactivities",
            "type": "number",
            "example": 1430000
          },
          "dividendsPaid": {
            "title": "Dividendspaid",
            "type": "number",
            "example": 92333000
          },
          "otherCashflowsFromFinancingActivities": {
            "title": "Othercashflowsfromfinancingactivities",
            "type": "number",
            "example": -533000000
          },
          "netBorrowings": {
            "title": "Netborrowings",
            "type": "number",
            "example": 1745000
          },
          "salePurchaseOfStock": {
            "title": "Salepurchaseofstock",
            "type": "number",
            "example": 54000000
          },
          "exchangeRateChanges": {
            "title": "Exchangeratechanges",
            "type": "number",
            "example": 56999
          },
          "changeInCash": {
            "title": "Changeincash",
            "type": "number",
            "example": -92000000
          },
          "cashAndCashEquivalentsChanges": {
            "title": "Cashandcashequivalentschanges",
            "type": "number",
            "example": 456700
          },
          "freeCashFlow": {
            "title": "Freecashflow",
            "type": "number",
            "example": 978000000
          },
          "otherInvestments": {
            "title": "Otherinvestments",
            "type": "number",
            "example": 160000000
          },
          "operatingCashFlow": {
            "title": "Operatingcashflow",
            "type": "number",
            "example": 7600000
          },
          "issuanceOfCommonStockAndPreferredStock": {
            "title": "Issuanceofcommonstockandpreferredstock",
            "type": "number",
            "example": 556000000
          },
          "otherInvestingCashFlowItemsTotal": {
            "title": "Otherinvestingcashflowitemstotal",
            "type": "number",
            "example": 3460000
          },
          "issuanceOfStock": {
            "title": "Issuanceofstock",
            "type": "number",
            "example": 2333000
          }
        }
      },
      "IWDividend": {
        "title": "IWDividend",
        "required": [
          "year",
          "count",
          "annual_dividend_rate",
          "quarterly"
        ],
        "type": "object",
        "properties": {
          "year": {
            "title": "Year",
            "type": "integer",
            "example": 1989
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "example": 2
          },
          "annual_dividend_rate": {
            "title": "Annual Dividend Rate",
            "type": "number",
            "example": 0.0019
          },
          "quarterly": {
            "title": "Quarterly",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DividendRate"
            }
          }
        }
      },
      "IWEarningsTrend": {
        "title": "IWEarningsTrend",
        "required": [
          "earnings_estimate",
          "revenue_estimate",
          "eps_revisions",
          "eps_trend"
        ],
        "type": "object",
        "properties": {
          "earnings_estimate": {
            "$ref": "#/components/schemas/ResponseModel_e4ab1f14"
          },
          "revenue_estimate": {
            "$ref": "#/components/schemas/ResponseModel_505b7671"
          },
          "eps_revisions": {
            "$ref": "#/components/schemas/ResponseModel_e76bce47"
          },
          "eps_trend": {
            "$ref": "#/components/schemas/ResponseModel_2cd81eb6"
          }
        }
      },
      "IWEquityAndCategory": {
        "title": "IWEquityAndCategory",
        "required": [
          "category_average",
          "equity",
          "name"
        ],
        "type": "object",
        "properties": {
          "category_average": {
            "title": "Category Average",
            "type": "string",
            "example": 97.129
          },
          "equity": {
            "title": "Equity Percentage",
            "type": "string",
            "example": "100"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "North America"
          }
        }
      },
      "IWFilings": {
        "title": "IWFilings",
        "required": [
          "filings",
          "next_offset"
        ],
        "type": "object",
        "properties": {
          "filings": {
            "title": "Filings",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockFiling"
            }
          },
          "next_offset": {
            "title": "Next Offset",
            "type": "integer"
          }
        }
      },
      "IWOutstandingShare": {
        "title": "IWOutstandingShare",
        "required": [
          "year"
        ],
        "type": "object",
        "properties": {
          "year": {
            "title": "Year",
            "type": "integer",
            "example": 2021
          },
          "annual": {
            "title": "Annual",
            "type": "number",
            "example": 1123.0
          },
          "q1": {
            "title": "Quarter 1",
            "type": "number",
            "example": 1133.0
          },
          "q2": {
            "title": "Quarter 2",
            "type": "number",
            "example": 1133.0
          },
          "q3": {
            "title": "Quarter 3",
            "type": "number",
            "example": 1119.0
          },
          "q4": {
            "title": "Quarter 4",
            "type": "number",
            "example": 1123.0
          }
        }
      },
      "IncomeStatementReport": {
        "title": "IncomeStatementReport",
        "type": "object",
        "properties": {
          "totalRevenue": {
            "title": "Totalrevenue",
            "type": "number",
            "example": 7512000000
          },
          "costOfRevenue": {
            "title": "Costofrevenue",
            "type": "number",
            "example": 5038000000
          },
          "grossProfit": {
            "title": "Grossprofit",
            "type": "number",
            "example": 2474000000
          },
          "totalOperatingExpenses": {
            "title": "Totaloperatingexpenses",
            "type": "number",
            "example": 1159000000
          },
          "researchDevelopment": {
            "title": "Researchdevelopment",
            "type": "number",
            "example": 273000000
          },
          "sellingGeneralAdministrative": {
            "title": "Sellinggeneraladministrative",
            "type": "number",
            "example": 886000000
          },
          "discontinuedOperations": {
            "title": "Discontinuedoperations",
            "type": "number",
            "example": 0
          },
          "otherOperatingExpenses": {
            "title": "Otheroperatingexpenses",
            "type": "number",
            "example": 6197000000
          },
          "operatingIncome": {
            "title": "Operatingincome",
            "type": "number",
            "example": 1315000000
          },
          "interestIncome": {
            "title": "Interestincome",
            "type": "number",
            "example": 3315000000
          },
          "totalOtherIncomeExpenseNet": {
            "title": "Totalotherincomeexpensenet",
            "type": "number",
            "example": -162000000
          },
          "nonOperatingIncomeNetOther": {
            "title": "Nonoperatingincomenetother",
            "type": "number",
            "example": 416000000
          },
          "incomeBeforeTax": {
            "title": "Incomebeforetax",
            "type": "number",
            "example": 1477000000
          },
          "taxProvision": {
            "title": "Taxprovision",
            "type": "number",
            "example": 25181.212
          },
          "incomeTaxExpense": {
            "title": "Incometaxexpense",
            "type": "number",
            "example": 5477000000
          },
          "extraordinaryItems": {
            "title": "Extraordinaryitems",
            "type": "number",
            "example": 1315000000
          },
          "minorityInterest": {
            "title": "Minorityinterest",
            "type": "number",
            "example": 6215000000
          },
          "effectOfAccountingCharges": {
            "title": "Effectofaccountingcharges",
            "type": "number",
            "example": 0
          },
          "nonRecurring": {
            "title": "Nonrecurring",
            "type": "number",
            "example": 4
          },
          "otherItems": {
            "title": "Otheritems",
            "type": "number",
            "example": 13
          },
          "netIncome": {
            "title": "Netincome",
            "type": "number",
            "example": 1045000000
          },
          "preferredStockAndOtherAdjustments": {
            "title": "Preferredstockandotheradjustments",
            "type": "number",
            "example": 46789
          },
          "netIncomeApplicableToCommonShares": {
            "title": "Netincomeapplicabletocommonshares",
            "type": "number",
            "example": 1045000000
          },
          "ebit": {
            "title": "Ebit",
            "type": "number",
            "example": 1477000000
          }
        }
      },
      "IndexComponent": {
        "title": "IndexComponent",
        "required": [
          "Ticker",
          "Code",
          "Exchange",
          "Name",
          "Sector"
        ],
        "type": "object",
        "properties": {
          "Ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "DJI.INDX"
          },
          "Code": {
            "title": "Code",
            "type": "string",
            "example": "BA"
          },
          "Exchange": {
            "title": "Exchange",
            "type": "string",
            "example": "US"
          },
          "Name": {
            "title": "Name",
            "type": "string",
            "example": "The Boeing Company"
          },
          "Sector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockSector"
              }
            ],
            "example": "Industrials"
          },
          "Industry": {
            "title": "Industry",
            "type": "string",
            "example": "Aerospace & Defense"
          },
          "Weight": {
            "title": "Weight",
            "type": "number",
            "example": 0.01
          }
        }
      },
      "IndexReferenceData": {
        "title": "IndexReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "DJI.INDX"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "DJI"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "Dow Jones Industrial Average"
          },
          "type": {
            "title": "Type of instrument",
            "type": "string",
            "example": "INDEX"
          },
          "currency": {
            "title": "Currency according to ISO standard",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "country": {
            "title": "Name of country",
            "type": "string",
            "example": "United States"
          },
          "exchange": {
            "title": "Name of exchange",
            "type": "string",
            "example": "INDX"
          }
        }
      },
      "IndexesSectorAllocation": {
        "title": "IndexesSectorAllocation",
        "type": "object",
        "properties": {
          "technology": {
            "title": "Technology",
            "type": "number",
            "example": 20
          },
          "financial_services": {
            "title": "Financial Services",
            "type": "number",
            "example": 16.67
          },
          "healthcare": {
            "title": "Healthcare",
            "type": "number",
            "example": 16.67
          },
          "industrials": {
            "title": "Industrials",
            "type": "number",
            "example": 13.33
          },
          "consumer_cyclical": {
            "title": "Consumer Cyclical",
            "type": "number",
            "example": 10
          },
          "consumer_defensive": {
            "title": "Consumer Defensive",
            "type": "number",
            "example": 10
          },
          "communication_services": {
            "title": "Communication Services",
            "type": "number",
            "example": 6.67
          },
          "energy": {
            "title": "Energy",
            "type": "number",
            "example": 3.33
          },
          "basic_materials": {
            "title": "Basic Materials",
            "type": "number",
            "example": 3.33
          }
        }
      },
      "InsiderTransaction": {
        "title": "InsiderTransaction",
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2021-12-16",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "ownerCik": {
            "title": "Owner CIK",
            "type": "integer",
            "example": 123311
          },
          "ownerName": {
            "title": "Owner Name",
            "type": "string",
            "example": "Elon Musk"
          },
          "transactionDate": {
            "title": "Transaction Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2021-12-16",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "transactionCode": {
            "title": "Transaction Code",
            "type": "string",
            "example": "S"
          },
          "transactionAmount": {
            "title": "Transaction Amount",
            "type": "integer",
            "example": 295214
          },
          "transactionPrice": {
            "title": "Transaction Price",
            "type": "integer",
            "example": 969.83
          },
          "transactionAcquiredDisposed": {
            "title": "Transaction Acquired Disposed",
            "type": "string",
            "example": "D"
          },
          "postTransactionAmount": {
            "title": "Post Transaction Amount",
            "type": "integer",
            "example": 100
          },
          "secLink": {
            "title": "Sec Link",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "http://www.sec.gov/Archives/edgar/data/1318605/000089924321048676/xslF345X03/doc4.xml"
          }
        }
      },
      "IntradayInterval": {
        "title": "IntradayInterval",
        "enum": [
          "1m",
          "2m",
          "5m",
          "15m",
          "30m",
          "45m",
          "1h",
          "2h",
          "4h"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "IposEconomicEvent": {
        "title": "IposEconomicEvent",
        "required": [
          "symbol",
          "date",
          "name",
          "price_range",
          "status"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "PEPG.US"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "PEPG"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2022-05-06",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "logo_url": {
            "title": "Logo Url",
            "type": "string"
          },
          "sector": {
            "title": "Sector",
            "type": "string",
            "example": "Healthcare"
          },
          "country_iso": {
            "title": "Country Iso",
            "type": "string",
            "example": "US"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "PepGen Inc."
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "example": "USD"
          },
          "exchange": {
            "title": "Exchange",
            "type": "string",
            "example": "NASDAQ Global Select"
          },
          "number_of_shares": {
            "title": "Number Of Shares",
            "type": "integer",
            "example": 9000000
          },
          "price_range": {
            "$ref": "#/components/schemas/PriceRange"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "example": "priced"
          },
          "total_shares_value": {
            "title": "Total Shares Value",
            "type": "integer",
            "example": 108000000
          }
        }
      },
      "MarketCapitalization": {
        "title": "MarketCapitalization",
        "type": "object",
        "properties": {
          "Mega": {
            "title": "Mega",
            "type": "string",
            "example": "9.39628"
          },
          "Big": {
            "title": "Big",
            "type": "string",
            "example": "34.73513"
          },
          "Medium": {
            "title": "Medium",
            "type": "string",
            "example": "55.13122"
          },
          "Small": {
            "title": "Small",
            "type": "string",
            "example": "0.2011"
          },
          "Micro": {
            "title": "Micro",
            "type": "string",
            "example": "0.09687"
          }
        }
      },
      "OHLC": {
        "title": "OHLC",
        "required": [
          "open",
          "high",
          "low",
          "close"
        ],
        "type": "object",
        "properties": {
          "open": {
            "title": "Open",
            "type": "number",
            "example": 250.81
          },
          "high": {
            "title": "High",
            "type": "number",
            "example": 257.23
          },
          "low": {
            "title": "Low",
            "type": "number",
            "example": 247.13
          },
          "close": {
            "title": "Close",
            "type": "number",
            "example": 256.01
          }
        }
      },
      "OHLCVDaily": {
        "title": "OHLCVDaily",
        "required": [
          "o",
          "h",
          "l",
          "c",
          "v",
          "t",
          "a"
        ],
        "type": "object",
        "properties": {
          "o": {
            "title": "O",
            "type": "number",
            "description": "Open price",
            "example": 677.38
          },
          "h": {
            "title": "H",
            "type": "number",
            "description": "High price",
            "example": 689.5402
          },
          "l": {
            "title": "L",
            "type": "number",
            "description": "Low price",
            "example": 671.645
          },
          "c": {
            "title": "C",
            "type": "number",
            "description": "Close price",
            "example": 683.8
          },
          "v": {
            "title": "V",
            "type": "integer",
            "description": "Volume",
            "example": 23321448
          },
          "t": {
            "title": "T",
            "type": "integer",
            "description": "Unix timestamp",
            "example": 1617840000
          },
          "a": {
            "title": "A",
            "type": "number",
            "description": "Adjusted close",
            "example": 683.8
          }
        }
      },
      "OHLCVIntraday": {
        "title": "OHLCVIntraday",
        "required": [
          "o",
          "h",
          "l",
          "c",
          "v",
          "t",
          "m"
        ],
        "type": "object",
        "properties": {
          "o": {
            "title": "O",
            "type": "number",
            "description": "Open price",
            "example": 677.38
          },
          "h": {
            "title": "H",
            "type": "number",
            "description": "High price",
            "example": 689.5402
          },
          "l": {
            "title": "L",
            "type": "number",
            "description": "Low price",
            "example": 671.645
          },
          "c": {
            "title": "C",
            "type": "number",
            "description": "Close price",
            "example": 683.8
          },
          "v": {
            "title": "V",
            "type": "integer",
            "description": "Volume",
            "example": 23321448
          },
          "t": {
            "title": "T",
            "type": "integer",
            "description": "Unix timestamp",
            "example": 1617840000
          },
          "m": {
            "title": "Market state (P - Pre market, O - Open market, A - After market)",
            "allOf": [
              {
                "$ref": "#/components/schemas/AvailableMarketState"
              }
            ],
            "description": "Market state",
            "example": "O"
          }
        }
      },
      "Officers": {
        "title": "Officers",
        "type": "object",
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string",
            "example": "Mr. Elon R. Musk"
          },
          "Title": {
            "title": "Title",
            "type": "string",
            "example": "Technoking of Tesla, CEO & Director"
          },
          "YearBorn": {
            "title": "Yearborn",
            "type": "string",
            "example": "1972"
          }
        }
      },
      "Paginator_BondsReferenceData_": {
        "title": "Paginator[BondsReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BondsReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_CommodityReferenceData_": {
        "title": "Paginator[CommodityReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommodityReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_CryptoReferenceData_": {
        "title": "Paginator[CryptoReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptoReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_ETFReferenceData_": {
        "title": "Paginator[ETFReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ETFReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_ForexReferenceData_": {
        "title": "Paginator[ForexReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForexReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_FundsReferenceData_": {
        "title": "Paginator[FundsReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundsReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_IndexReferenceData_": {
        "title": "Paginator[IndexReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "Paginator_StocksReferenceData_": {
        "title": "Paginator[StocksReferenceData]",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StocksReferenceData"
            }
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0,
            "example": 1
          }
        }
      },
      "PerformanceChangePc": {
        "title": "PerformanceChangePc",
        "type": "object",
        "properties": {
          "change_1w": {
            "title": "Weekly %",
            "type": "number",
            "example": -1.34455746521689,
            "tags": [
              "Performance"
            ]
          },
          "change_1m": {
            "title": "1 Month %",
            "type": "number",
            "example": 7.29908443540181,
            "tags": [
              "Performance"
            ]
          },
          "change_3m": {
            "title": "3 Month %",
            "type": "number",
            "example": 10.9533201840894,
            "tags": [
              "Performance"
            ]
          },
          "change_6m": {
            "title": "6 Month %",
            "type": "number",
            "example": 23.0746791131855,
            "tags": [
              "Performance"
            ]
          },
          "change_1y": {
            "title": "1 Year %",
            "type": "number",
            "example": 124.116865869854,
            "tags": [
              "Performance"
            ]
          }
        }
      },
      "PriceRange": {
        "title": "PriceRange",
        "type": "object",
        "properties": {
          "exact_price": {
            "title": "Exact Price",
            "type": "number",
            "example": 12
          },
          "price_from": {
            "title": "Price From",
            "type": "number"
          },
          "price_to": {
            "title": "Price To",
            "type": "number"
          }
        }
      },
      "PriceTarget": {
        "title": "PriceTarget",
        "required": [
          "ticker",
          "target_high",
          "target_low",
          "target_mean",
          "target_median"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
            "example": "TSLA.US"
          },
          "last_updated": {
            "title": "Last Updated",
            "type": "string",
            "format": "date-time",
            "example": "2019-08-24T14:15:22Z"
          },
          "target_high": {
            "title": "Target High",
            "type": "number",
            "example": 1554.3
          },
          "target_low": {
            "title": "Target Low",
            "type": "number",
            "example": 252.5
          },
          "target_mean": {
            "title": "Target Mean",
            "type": "number",
            "example": 986.41
          },
          "target_median": {
            "title": "Target Median",
            "type": "number",
            "example": 986.41
          }
        }
      },
      "Quote": {
        "title": "Quote",
        "required": [
          "ticker",
          "name",
          "symbol",
          "price",
          "previous_close",
          "daily_price_change",
          "daily_percentage_change",
          "asset_class",
          "broker",
          "ohlc_week"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
            "example": "TSLA.US"
          },
          "name": {
            "title": "Name of the instrument",
            "type": "string",
            "example": "Tesla Inc"
          },
          "symbol": {
            "title": "Symbol of the instrument",
            "type": "string",
            "description": "A symbol is a unique series of letters assigned to a security for trading purposes.",
            "example": "TSLA",
            "examples": [
              "TSLA",
              "EURUSD"
            ]
          },
          "price": {
            "title": "Price of the instrument",
            "type": "number",
            "example": 250.01
          },
          "previous_close": {
            "title": "Previous close price of instrument",
            "type": "number",
            "example": 240.21
          },
          "daily_price_change": {
            "title": "Daily price change",
            "type": "number",
            "example": 9.8
          },
          "daily_percentage_change": {
            "title": "Daily percentage change",
            "type": "number",
            "example": 4.08
          },
          "timestamp": {
            "title": "Timestamp of last price",
            "type": "integer",
            "example": 1659447244639
          },
          "asset_class": {
            "title": "Asset class of the instrument",
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetClass"
              }
            ],
            "example": "STOCKS"
          },
          "currency": {
            "title": "Currency of the instrument",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "logo_url": {
            "title": "Logo of the instrument",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "volume": {
            "title": "Last volume of the instrument",
            "type": "number",
            "example": 42
          },
          "broker": {
            "title": "Broker/Exchange of the instrument",
            "type": "string",
            "example": "NASDAQ"
          },
          "ohlc_week": {
            "title": "OHLC week range",
            "allOf": [
              {
                "$ref": "#/components/schemas/OHLC"
              }
            ]
          }
        }
      },
      "Recommendation": {
        "title": "Recommendation",
        "enum": [
          "Strong Buy",
          "Buy",
          "Hold",
          "Sell",
          "Strong Sell"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ResponseModel_2cd81eb6": {
        "title": "ResponseModel_2cd81eb6",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/EarningTrendEPS"
          }
        }
      },
      "ResponseModel_326b7ca7": {
        "title": "ResponseModel_326b7ca7",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/IWCashFlowReport"
          }
        }
      },
      "ResponseModel_3606bfd5": {
        "title": "ResponseModel_3606bfd5",
        "required": [
          "str"
        ],
        "type": "object",
        "properties": {
          "str": {
            "$ref": "#/components/schemas/IndexComponent"
          }
        }
      },
      "ResponseModel_4e0cf902": {
        "title": "ResponseModel_4e0cf902",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/BalanceSheetReport"
          }
        }
      },
      "ResponseModel_505b7671": {
        "title": "ResponseModel_505b7671",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/EarningTrendRevenueEstimate"
          }
        }
      },
      "ResponseModel_6536e707": {
        "title": "ResponseModel_6536e707",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/BalanceSheetReport"
          }
        }
      },
      "ResponseModel_98a48935": {
        "title": "ResponseModel_98a48935",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/IncomeStatementReport"
          }
        }
      },
      "ResponseModel_9feaa797": {
        "title": "ResponseModel_9feaa797",
        "required": [
          "str"
        ],
        "type": "object",
        "properties": {
          "str": {
            "$ref": "#/components/schemas/Allocation"
          }
        }
      },
      "ResponseModel_b4fd076b": {
        "title": "ResponseModel_b4fd076b",
        "required": [
          "int"
        ],
        "type": "object",
        "properties": {
          "int": {
            "$ref": "#/components/schemas/AssetAllocationElement"
          }
        }
      },
      "ResponseModel_b858860e": {
        "title": "ResponseModel_b858860e",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/IncomeStatementReport"
          }
        }
      },
      "ResponseModel_c9e773b2": {
        "title": "ResponseModel_c9e773b2",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/EarningHistory"
          }
        }
      },
      "ResponseModel_e4ab1f14": {
        "title": "ResponseModel_e4ab1f14",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/EarningTrendEarnEstimate"
          }
        }
      },
      "ResponseModel_e76bce47": {
        "title": "ResponseModel_e76bce47",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/EarningTrendEPSRevisions"
          }
        }
      },
      "ResponseModel_ec9adfc3": {
        "title": "ResponseModel_ec9adfc3",
        "required": [
          "2022-01-01"
        ],
        "type": "object",
        "properties": {
          "2022-01-01": {
            "$ref": "#/components/schemas/IWCashFlowReport"
          }
        }
      },
      "Score": {
        "title": "Score",
        "required": [
          "neg",
          "neu",
          "pos",
          "compound"
        ],
        "type": "object",
        "properties": {
          "neg": {
            "title": "Neg",
            "type": "number",
            "example": 0.218
          },
          "neu": {
            "title": "Neu",
            "type": "number",
            "example": 0.691
          },
          "pos": {
            "title": "Pos",
            "type": "number",
            "example": 0.09
          },
          "compound": {
            "title": "Compound",
            "type": "number",
            "example": -0.34
          }
        }
      },
      "SectorIWEquityAndCategory": {
        "title": "SectorIWEquityAndCategory",
        "required": [
          "category_average",
          "equity",
          "name"
        ],
        "type": "object",
        "properties": {
          "category_average": {
            "title": "Category Average",
            "type": "string",
            "example": 97.129
          },
          "equity": {
            "title": "Equity Percentage",
            "type": "string",
            "example": "100"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Communication Services"
          }
        }
      },
      "SectorWeight": {
        "title": "SectorWeight",
        "required": [
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockSector"
              }
            ],
            "example": "Technology",
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Benchmark": {
            "title": "Benchmark",
            "type": "number",
            "example": 25.48,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "CategoryAverage": {
            "title": "Categoryaverage",
            "type": "number",
            "example": 23.54,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Amount": {
            "title": "Amount Percentage",
            "type": "number",
            "example": 25.01,
            "tags": [
              "IW Fundamentals"
            ]
          }
        }
      },
      "Sentiment": {
        "title": "Sentiment",
        "enum": [
          "BEARISH",
          "BULLISH",
          "NEUTRAL"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "SocialInfo": {
        "title": "SocialInfo",
        "required": [
          "website",
          "explorer",
          "github",
          "bitcointalk",
          "twitter",
          "reddit",
          "telegram",
          "facebook",
          "youtube"
        ],
        "type": "object",
        "properties": {
          "website": {
            "title": "Website",
            "type": "string",
            "example": "http://www.monero.cc"
          },
          "explorer": {
            "title": "Explorer",
            "type": "string",
            "example": "http://moneroblocks.info/"
          },
          "github": {
            "title": "Github",
            "type": "string",
            "example": "https://github.com/monero-project/monero"
          },
          "bitcointalk": {
            "title": "Bitcointalk",
            "type": "string",
            "example": "https://bitcointalk.org/index.php?topic=583449.0"
          },
          "twitter": {
            "title": "Twitter",
            "type": "string",
            "example": "https://twitter.com/monero"
          },
          "reddit": {
            "title": "Reddit",
            "type": "string",
            "example": "https://reddit.com/r/monero"
          },
          "telegram": {
            "title": "Telegram",
            "type": "string",
            "example": "https://t.me/bitmonero"
          },
          "facebook": {
            "title": "Facebook",
            "type": "string",
            "example": "https://facebook.com/monerocurrency"
          },
          "youtube": {
            "title": "Youtube",
            "type": "string",
            "example": "https://www.youtube.com/monero"
          },
          "twitter_count": {
            "title": "Twitter Count",
            "type": "integer",
            "example": 333951
          },
          "reddit_count": {
            "title": "Reddit Count",
            "type": "integer",
            "example": 188500
          },
          "telegram_count": {
            "title": "Telegram Count",
            "type": "integer",
            "example": 0
          },
          "facebook_count": {
            "title": "Facebook Count",
            "type": "integer",
            "example": 0
          }
        }
      },
      "SortOrder": {
        "title": "SortOrder",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "SplitsEconomicEvent": {
        "title": "SplitsEconomicEvent",
        "required": [
          "symbol",
          "date",
          "name",
          "from_factor",
          "to_factor"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "IVPM.LSE"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "IVPM.L"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2022-05-03",
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "logo_url": {
            "title": "Logo Url",
            "type": "string",
            "example": "https://cdn.profit.com/logo/stocks/IVPM.png"
          },
          "sector": {
            "title": "Sector",
            "type": "string",
            "example": "Financial Services"
          },
          "country_iso": {
            "title": "Country Iso",
            "type": "string",
            "example": "UK"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Invesco Perpetual Man Liq"
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "example": "GBX"
          },
          "from_factor": {
            "title": "From Factor",
            "type": "number",
            "example": 1
          },
          "to_factor": {
            "title": "To Factor",
            "type": "number",
            "example": 2
          }
        }
      },
      "StockFiling": {
        "title": "StockFiling",
        "required": [
          "form_type",
          "name",
          "date_filed",
          "file_url"
        ],
        "type": "object",
        "properties": {
          "form_type": {
            "title": "Form Type",
            "type": "string",
            "example": "4"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "Statement of changes"
          },
          "date_filed": {
            "title": "Date Filed",
            "type": "string",
            "format": "date-time",
            "example": 1643657825
          },
          "file_url": {
            "title": "File Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "https://www.url.com/filling"
          }
        }
      },
      "StockFinancialsHistory_BalanceSheetReport_": {
        "title": "StockFinancialsHistory[BalanceSheetReport]",
        "required": [
          "quarterly",
          "yearly"
        ],
        "type": "object",
        "properties": {
          "currency_symbol": {
            "title": "Currency Symbol",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "quarterly": {
            "$ref": "#/components/schemas/ResponseModel_6536e707"
          },
          "yearly": {
            "$ref": "#/components/schemas/ResponseModel_4e0cf902"
          }
        }
      },
      "StockFinancialsHistory_IWCashFlowReport_": {
        "title": "StockFinancialsHistory[IWCashFlowReport]",
        "required": [
          "quarterly",
          "yearly"
        ],
        "type": "object",
        "properties": {
          "currency_symbol": {
            "title": "Currency Symbol",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "quarterly": {
            "$ref": "#/components/schemas/ResponseModel_326b7ca7"
          },
          "yearly": {
            "$ref": "#/components/schemas/ResponseModel_ec9adfc3"
          }
        }
      },
      "StockFinancialsHistory_IncomeStatementReport_": {
        "title": "StockFinancialsHistory[IncomeStatementReport]",
        "required": [
          "quarterly",
          "yearly"
        ],
        "type": "object",
        "properties": {
          "currency_symbol": {
            "title": "Currency Symbol",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "quarterly": {
            "$ref": "#/components/schemas/ResponseModel_b858860e"
          },
          "yearly": {
            "$ref": "#/components/schemas/ResponseModel_98a48935"
          }
        }
      },
      "StockFundamentalsPeerAnalysis": {
        "title": "StockFundamentalsPeerAnalysis",
        "required": [
          "ticker",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "BYDDY.US"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Instrument long name",
            "example": "BYD Company Limited"
          },
          "price": {
            "title": "Price",
            "type": "number",
            "example": 84.38
          },
          "change_1d_prc": {
            "title": "1d Change percentile",
            "type": "number",
            "example": 5.9377
          }
        }
      },
      "StockSector": {
        "title": "StockSector",
        "enum": [
          "Basic Materials",
          "Commercial Services & Supplies",
          "Communication Services",
          "Conglomerates",
          "Consumer Cyclical",
          "Consumer Defensive",
          "Consumer Discretionary",
          "Consumer Finance",
          "Consumer Goods",
          "Consumer Staples",
          "Energy",
          "Financial",
          "Financial Services",
          "Healthcare",
          "Industrial Goods",
          "Industrials",
          "Information Technology",
          "Materials",
          "Oil & Gas Operations",
          "Pharmaceuticals",
          "Biotechnology",
          "Real Estate",
          "Services",
          "Technology",
          "Utilities",
          "Municipal",
          "Corporate",
          "Cash and Equivalents",
          "Securitized",
          "Derivative",
          "Government",
          "Other",
          "Property",
          "Specialty Retail",
          "Food Products",
          "Personal Products",
          "Metals & Mining",
          "Academic & Educational Services",
          "Diversified Consumer Services"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "StocksGeneralInformation": {
        "title": "StocksGeneralInformation",
        "required": [
          "Symbol",
          "Type",
          "Exchange",
          "CurrencyCode",
          "CountryName",
          "CountryISO",
          "CurrencyName"
        ],
        "type": "object",
        "properties": {
          "Symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "TSLA"
          },
          "Description": {
            "title": "Description",
            "type": "string",
            "example": "Tesla, Inc. designs, develops, manufactures, leases, and sells electric vehicles, and\nenergy generation and storage systems in the United States, China, and internationally. It operates in two segments,\nAutomotive, and Energy Generation and Storage. The Automotive segment offers electric vehicles, as well as sells\nautomotive regulatory credits; and non-warranty after-sales vehicle, used vehicles, retail merchandise, and vehicle\ninsurance services. This segment also provides sedans and sport utility vehicles through direct and used vehicle sales,\na network of Tesla Superchargers, and in-app upgrades; purchase financing and leasing services; services for electric\nvehicles through its company-owned service locations and Tesla mobile service technicians; and vehicle limited\nwarranties and extended service plans. The Energy Generation and Storage segment engages in the design, manufacture,\ninstallation, sale, and leasing of solar energy generation and energy storage products, and related services to\nresidential, commercial, and industrial customers and utilities through its website, stores, and galleries, as well as\nthrough a network of channel partners; and provision of service and repairs to its energy product customers, including\nunder warranty, as well as various financing options to its solar customers. The company was formerly known as Tesla\nMotors, Inc. and changed its name to Tesla, Inc. in February 2017. Tesla, Inc. was incorporated in 2003 and is\nheadquartered in Austin, Texas."
          },
          "FullTimeEmployees": {
            "title": "Fulltimeemployees",
            "type": "integer",
            "example": 127855
          },
          "LogoURL": {
            "title": "Logourl",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri",
            "example": "https://cdn.darqube.com/logo/stocks/TSLA.US.png"
          },
          "WebURL": {
            "title": "Weburl",
            "type": "string",
            "example": "https://www.tesla.com"
          },
          "Phone": {
            "title": "Phone",
            "type": "string",
            "example": "(512) 516-8177"
          },
          "Address": {
            "title": "Address",
            "type": "string",
            "example": "13101 Tesla Road, Austin, TX, United States, 78725"
          },
          "Type": {
            "title": "Type",
            "type": "string",
            "example": "Common Stock"
          },
          "Exchange": {
            "title": "Exchange",
            "type": "string",
            "example": "NASDAQ",
            "tags": [
              "GI"
            ]
          },
          "CurrencyCode": {
            "title": "Currency Code",
            "type": "string",
            "example": "USD",
            "tags": [
              "GI"
            ]
          },
          "CountryName": {
            "title": "Country Name",
            "type": "string",
            "example": "USA",
            "tags": [
              "GI"
            ]
          },
          "CountryISO": {
            "title": "Country ISO",
            "type": "string",
            "example": "US",
            "tags": [
              "GI"
            ]
          },
          "CurrencyName": {
            "title": "Currency Name",
            "type": "string",
            "example": "US Dollar",
            "tags": [
              "GI"
            ]
          },
          "ISIN": {
            "title": "ISIN",
            "type": "string",
            "example": "US88160R1014",
            "tags": [
              "GI"
            ]
          },
          "CUSIP": {
            "title": "CUSIP",
            "type": "string",
            "example": "88160R101",
            "tags": [
              "GI"
            ]
          },
          "Sector": {
            "title": "Sector",
            "type": "string",
            "example": "Consumer Cyclical",
            "tags": [
              "GI"
            ]
          },
          "Industry": {
            "title": "Industry",
            "type": "string",
            "example": "Auto Manufacturers",
            "tags": [
              "GI",
              "Profile"
            ]
          },
          "FiscalYearEnd": {
            "title": "Fiscalyearend",
            "type": "string",
            "example": "December",
            "tags": [
              "GI"
            ]
          },
          "IPODate": {
            "title": "Ipodate",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2010-06-29",
            "tags": [
              "GI"
            ],
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          },
          "UpdatedAt": {
            "title": "Updatedat",
            "type": "string",
            "description": "ISO Date as string",
            "example": "2021-11-02",
            "tags": [
              "GI"
            ],
            "examples": [
              "2022-01-01",
              "2022-05-15"
            ]
          }
        }
      },
      "StocksRecommendation": {
        "title": "StocksRecommendation",
        "required": [
          "buy",
          "hold",
          "sell",
          "strong_buy",
          "strong_sell",
          "period"
        ],
        "type": "object",
        "properties": {
          "buy": {
            "title": "Buy",
            "type": "integer",
            "example": 10
          },
          "hold": {
            "title": "Hold",
            "type": "integer",
            "example": 13
          },
          "sell": {
            "title": "Sell",
            "type": "integer",
            "example": 6
          },
          "strong_buy": {
            "title": "Strong Buy",
            "type": "integer",
            "example": 13
          },
          "strong_sell": {
            "title": "Strong Sell",
            "type": "integer",
            "example": 4
          },
          "period": {
            "title": "Period",
            "type": "integer",
            "example": 1648771200
          }
        }
      },
      "StocksReferenceData": {
        "title": "StocksReferenceData",
        "required": [
          "ticker",
          "symbol",
          "name"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "TSLA.US"
          },
          "symbol": {
            "title": "Instrument symbol",
            "type": "string",
            "example": "TSLA"
          },
          "name": {
            "title": "Full name of instrument",
            "type": "string",
            "example": "Tesla Inc"
          },
          "type": {
            "title": "Type of instrument",
            "type": "string",
            "example": "Common stock"
          },
          "currency": {
            "title": "Currency according to ISO standard",
            "type": "string",
            "description": "str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.",
            "example": "USD",
            "max_length": 3,
            "examples": [
              "USD",
              "GBP",
              "EUR"
            ],
            "min_length": 3
          },
          "country": {
            "title": "Name of country",
            "type": "string",
            "example": "United States"
          },
          "exchange": {
            "title": "Name of exchange",
            "type": "string",
            "example": "NASDAQ"
          }
        }
      },
      "StocksSplits": {
        "title": "StocksSplits",
        "type": "object",
        "properties": {
          "LastSplitFactor": {
            "title": "Lastsplitfactor",
            "type": "string",
            "example": "4:1",
            "projection": "$statistics.splits_dividends.LastSplitFactor"
          },
          "LastSplitDate": {
            "title": "Lastsplitdate",
            "type": "string",
            "example": "2021-11-11",
            "projection": "$statistics.splits_dividends.LastSplitDate"
          }
        }
      },
      "Tick": {
        "title": "Tick",
        "required": [
          "t",
          "p",
          "ts",
          "v"
        ],
        "type": "object",
        "properties": {
          "t": {
            "title": "Ticker",
            "type": "string",
            "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
            "example": "TSLA.US"
          },
          "p": {
            "title": "Price",
            "type": "number"
          },
          "ts": {
            "title": "Timestamp",
            "type": "integer",
            "description": "Timestamp in milliseconds"
          },
          "v": {
            "title": "Volume",
            "type": "number"
          }
        }
      },
      "TickSubsMessage": {
        "title": "TickSubsMessage",
        "required": [
          "action",
          "tickers"
        ],
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "tickers": {
            "title": "Tickers",
            "type": "array",
            "items": {
              "type": "string",
              "description": "A ticker is a unique identifier for a trading purpose. Is composed from Symbol and code of Exchange.",
              "example": "TSLA.US"
            }
          }
        },
        "description": "Data API Websocket subscription message model."
      },
      "TopMover": {
        "title": "TopMover",
        "required": [
          "ticker",
          "symbol",
          "name",
          "price",
          "change_1d"
        ],
        "type": "object",
        "properties": {
          "ticker": {
            "title": "Ticker",
            "type": "string",
            "example": "BA.US"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string",
            "example": "BA"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "example": "The Boeing Company"
          },
          "price": {
            "title": "Price",
            "type": "number",
            "example": 208.34
          },
          "change_1d": {
            "title": "Change 1D",
            "type": "number",
            "example": 4.05
          }
        }
      },
      "UpgradeDowngradeAction": {
        "title": "UpgradeDowngradeAction",
        "enum": [
          "up",
          "down",
          "main",
          "reit",
          "init"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "UpgradeDowngradeRecord": {
        "title": "UpgradeDowngradeRecord",
        "required": [
          "grade_time",
          "company",
          "from_grade",
          "to_grade",
          "action"
        ],
        "type": "object",
        "properties": {
          "grade_time": {
            "title": "Grade Time",
            "type": "string",
            "format": "date-time",
            "example": "2022-01-27T00:00:00"
          },
          "company": {
            "title": "Company",
            "type": "string",
            "example": "JP Morgan"
          },
          "from_grade": {
            "title": "From Grade",
            "type": "string",
            "example": "Hold"
          },
          "to_grade": {
            "title": "To Grade",
            "type": "string",
            "example": "Strong Buy"
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpgradeDowngradeAction"
              }
            ],
            "example": "main"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Volumes": {
        "title": "Volumes",
        "required": [
          "Price",
          "PercentChange24h",
          "Open24h",
          "High24h",
          "Low24H",
          "MarketCap",
          "TradeVolume24h",
          "TotalTradeVolume",
          "LastUpdate"
        ],
        "type": "object",
        "properties": {
          "Price": {
            "title": "Price",
            "type": "number",
            "example": 60953.95
          },
          "PercentChange24h": {
            "title": "Percentchange24H",
            "type": "number",
            "example": 0.6142601856464487
          },
          "Open24h": {
            "title": "Open24H",
            "type": "number",
            "example": 60581.82
          },
          "High24h": {
            "title": "High24H",
            "type": "number",
            "example": 4643.69
          },
          "Low24H": {
            "title": "Low24H",
            "type": "number",
            "example": 4302.31
          },
          "MarketCap": {
            "title": "Market capitalization",
            "type": "integer",
            "example": 543704539376
          },
          "TradeVolume24h": {
            "title": "Tradevolume24H",
            "type": "number",
            "example": 1983299231.15174
          },
          "TotalTradeVolume": {
            "title": "Totaltradevolume",
            "type": "number",
            "example": 1983299231.15174
          },
          "TotalTopTierVolume": {
            "title": "Totaltoptiervolume",
            "type": "number",
            "example": 10049519740.5449
          },
          "LastUpdate": {
            "title": "Lastupdate",
            "type": "integer",
            "description": "Unix timestamp",
            "example": 1617840000
          }
        },
        "description": "Data from cryptocompare, in comments original fields names from RAW.USD"
      },
      "VolumesTo": {
        "title": "VolumesTo",
        "required": [
          "USD"
        ],
        "type": "object",
        "properties": {
          "USD": {
            "$ref": "#/components/schemas/Volumes"
          }
        }
      },
      "WorldRegion": {
        "title": "WorldRegion",
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string",
            "example": "North America",
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Benchmark": {
            "title": "Benchmark",
            "type": "number",
            "example": 99.33,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "CategoryAverage": {
            "title": "Categoryaverage",
            "type": "number",
            "example": 97.13,
            "tags": [
              "IW Fundamentals"
            ]
          },
          "Stocks": {
            "title": "Stocks Percentage",
            "type": "number",
            "example": 98.96,
            "tags": [
              "IW Fundamentals"
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Reference Data",
      "description": "\nReference Data returns the available symbols and security identifiers available in the API.\n"
    },
    {
      "name": "Market Data",
      "description": "\nMarket data returns price data for a financial instrument.\nIt includes historical series, quotes, rates, and other prices across\nStocks, Forex, Cryptocurrencies, ETFs, Mutual Funds, Commodities, Indices and Bonds.\n\n"
    },
    {
      "name": "Websockets",
      "description": "\nStream real-time prices for Crypto currencies.\n1 API key can only open 1 connection at a time.\nOnce a connection between the server and the client is established,\nWebSocket will automatically send the data to you once a new piece of data is available.\n"
    },
    {
      "name": "Fundamentals Data",
      "description": "\nFundamental data covers a broad and diverse range of datasets across\n**Stocks**, **Forex**, **Cryptocurrencies**, **ETFs**, **Mutual Funds**, **Commodities** and **Indexes**.\nOur database includes and is not limited to company financials,\nprofiles, analyst recommendations, earnings,\nSEC filings, fund holdings, Index constituents and more.\nThe data is updated regularly and is available for all major countries and exchanges around the world.\nPlease note, we can not guarantee the completeness of financial data for each company since\nnot all companies report the whole financial data.\n"
    },
    {
      "name": "Stocks",
      "description": "\nProfit.com Data API provides fundamental data for almost all stock symbols from US exchanges\n(including NYSE, NASDAQ, and ARCA) and from major exchanges from Europe and Asia.\nThe list of supported stock symbols can be found\n[here](/#operation/stocks_symbols_data_api_reference_stocks_get).\n"
    },
    {
      "name": "Indexes",
      "description": "\nProfit.com Data API provides fundamental data for almost all index symbols from US exchanges\n(including NYSE, NASDAQ, and ARCA) and from major exchanges from Europe and Asia.\nThe list of supported index symbols can be found\n[here](/#operation/indexes_symbols_data_api_reference_index_get).\n"
    },
    {
      "name": "ETFs",
      "description": "\nProfit.com Data API provides fundamental data for more than 15000 ETFs from US,\nEurope and Asia. The list of supported ETFs and Mutual Funds symbols can be found\n[here](/#operation/etfs_symbols_data_api_reference_etfs_get).\n"
    },
    {
      "name": "Funds",
      "description": "\nProfit.com Data API provides fundamental data for more than 50000 Mutual funds from US,\nEurope and Asia. The list of supported ETFs and Mutual Funds symbols can be found\n[here](/#operation/mutual_funds_symbols_data_api_reference_funds_get).\n"
    },
    {
      "name": "Forex",
      "description": "\nProfit.com Data API provides fundamental data for over 900 Forex currency pairs.\nThe list of supported Forex symbols can be found\n[here](/#operation/forex_symbols_data_api_reference_forex_get).\n"
    },
    {
      "name": "Crypto",
      "description": "\nProfit.com Data API provides fundamental data for the majority Cryptocurrency pairs.\nThe list of supported Cryptocurrency symbols can be found\n[here](/#operation/crypto_symbols_data_api_reference_crypto_get).\n"
    },
    {
      "name": "Commodities",
      "description": "\nProfit.com Data API provides fundamental data for the majority commodity symbols.\nThe list of supported Cryptocurrency symbols can be found\n[here](/#operation/commodity_symbols_data_api_reference_commodity_get).\n"
    },
    {
      "name": "News And Tweets",
      "description": "\nProfit.com Data API provides real-time and historical news and tweets for Stocks, Indexes, ETFs, Mutual Funds,\nCryptocurrencies, Forex pairs or Commodity symbols. The list of supported symbols can be found above in the\nReference data section.\n"
    },
    {
      "name": "Economic Calendar",
      "description": "\nThe Real-Time Economic Calendar covers economic events and indicators from all over the world and across all major\nasset classes including Stocks, Forex, Cryptocurrencies and Commodities. It's automatically updated when new data is\nreleased. The Real-time Calendar only provides general information and it is not meant to be a trading guide.\nBy default the last 100 events are returned.To call a custom period for a given date range,\nuse start_date and end_date parameters.\nProfit.com is not held responsible for the eventual inaccuracies that might occur.\nThe Real-time Calendar may also be subject to change without any previous notice.\n"
    }
  ]
}